{"version":3,"sources":["webpack:///./src/js/prototypes/items/Rectangle.js","webpack:///./src/js/prototypes/placeholder.js","webpack:///./src/js/prototypes/Project.js","webpack:///./src/js/prototypes/Canvas.js","webpack:///./src/js/util/observeAnimatableTree.js","webpack:///./src/js/prototypes/ModeStore.js","webpack:///./src/js/store.js","webpack:///./src/js/index.jsx","webpack:///./src/js/containers/App.jsx","webpack:///./src/js/components/Playbar.jsx","webpack:///./src/js/containers/Viewer.jsx","webpack:///./src/js/prototypes/items/Circle.js","webpack:///./src/js/components/GridItem.jsx","webpack:///./src/js/prototypes/Handle.js","webpack:///./src/js/prototypes/Animation.js","webpack:///./src/js/components/Grid.jsx","webpack:///./src/css/index.js","webpack:///./src/js/containers/ToolController.jsx","webpack:///./src/js/components/IntegerInput.jsx","webpack:///./src/js/components/Modal.jsx","webpack:///./src/js/containers/PropertyEditor.jsx","webpack:///./src/js/containers/ProjectSettings.jsx","webpack:///./src/js/containers/BuildMode.jsx","webpack:///./src/js/components/Canvas.jsx","webpack:///./src/js/containers/ExportMode.jsx","webpack:///./src/css/bare.min.css","webpack:///./src/js/util/bezierCurve.js","webpack:///./src/js/prototypes/Keyframe.js","webpack:///./src/js/prototypes/AnimatableItem.js","webpack:///./src/js/containers/ModeController.jsx","webpack:///./src/js/prototypes/HandleEditor.js","webpack:///./src/js/containers/HandleEditor.jsx","webpack:///./src/js/containers/KeyframeEditor.jsx","webpack:///./src/js/containers/AnimateMode.jsx","webpack:///./src/js/containers/PlayController.jsx","webpack:///./src/js/components/withWindowSize.jsx","webpack:///./src/js/containers/ViewMode.jsx","webpack:///./node_modules/file-loader/dist/cjs.js"],"names":["Rectangle","AnimatableItem","itemProps","this","position","x","y","absX","absolute","absY","absWidth","width","absHeight","height","paper","Path","point","size","radius","Math","max","_width","value","recreate","_height","_radius","observable","WIDTH","HEIGHT","RADIUS","i","setLength","animation","setRange","setIn","setOut","addItems","canvas","circle","Circle","key","addKey","add","rect","Project","rootStore","clear","project","remove","setSize","undefined","Animation","FIRST","frames","setName","name","action","Canvas","attatchTo","id","element","document","getElementById","setup","addListenersAndSelect","animatable","item","on","handleItemMouseDown","select","event","stopPropagation","currentTarget","handleViewMouseDown","deselect","forEachAnimatable","callback","Object","values","animatables","forEach","build","create","draw","frame","frameToDraw","now","console","log","view","update","selectOn","selectOff","off","setSizeAction","setTimeout","autoUpdate","background","topLeft","bottomRight","fillColor","color","firstFrame","_color","t","tool","clone","nextTool","entering","toolId","prevTool","exiting","mode","settings","selected","observeAnimatableTree","observableObj","constructor","OBSERVABLES","map","keys","keyframes","keyFrType","Mode","m","current","RootStore","ModeStore","reaction","store","appNode","ReactDOM","render","App","observer","Component","props","set","setTool","minHeight","gridTemplateRows","hot","module","Playbar","fullWidth","totalFrames","inPoint","outPoint","ABSOLUTE_FIRST","playbarWidth","per","marker","head","parseInt","tail","activeHead","activeTail","style","display","playbarStyle","backgroundColor","marginTop","margin","Viewer","canvasHasSize","init","Fragment","hasSize","lastFrame","center","GridItem","children","Handle","type","influence","distance","_influence","_distance","MAX","newX","newY","nextFrame","later","prevFrame","earlier","length","f","goToFrame","playing","animateAtRate","pause","requestId","cancelAnimationFrame","func","interval","fps","then","Date","loop","requestAnimationFrame","delta","sync","round","Grid","cssContext","require","ToolController","choose","preventDefault","addCircle","existing","addRectangle","padding","onClick","primary","transform","IntegerInput","state","localValue","onChange","setState","target","onBlur","property","possibleInt","result","Number","isInteger","handleKeyDown","shiftKey","incrementBy","decrementBy","changeBy","operation","amount","next","a","b","marginRight","textAlign","onKeyDown","Modal","open","handleClose","clickawayEl","useRef","container","contains","ref","body","content","PropertyEditor","itemClass","classControls","zIndex","left","top","overflow","border","ProjectSettings","setColor","closeModal","step","flexDirection","BuildMode","ready","placeholder","clientWidth","gridTemplateColumns","gridArea","alignSelf","testForAvailability","prevProps","ExportMode","alignItems","justifyItems","exports","makeRoot","real","imag","evaluate","A","B","C","D","q0","B1","C2","Q","dQ","bezierCurve","x2","x3","y2","y3","Error","roots","X","b1","c2","evalInfo","q","dq","r","abs","s","sign","sqrt","x0","den","EPSILON","push","quadInfo","X1","Y1","X2","Y2","concat","getCubicRoots","xA","xB","xC","filter","toFixed","is","yA","yB","yC","c","d","Keyframe","handleIn","handleOut","sort","createCurve","k1","k2","interpolate","curve","timeRatio","valueRatio","dimension","fraction","valueForFrame","includes","indexOf","where","before","after","hue","floor","random","saturation","brightness","scale","rotate","rotation","k","updateKeyframes","setCanvas","sharedProps","onCreate","setUntrackedValues","entries","xKeyframes","yKeyframes","xValue","yValue","activeLayer","_x","_y","_scale","scaleBy","_rotation","rotateBy","_fillColor","Y","SCALE","ROTATION","FILL_COLOR","ModeController","navigate","textContent","toUpperCase","borderBottom","HandleEditor","trueWidth","keyframeBefore","keyframeAfter","handleBefore","absoluteHandlePosition","handleAfter","PaperScope","topRight","bottomLeft","spacing","STEP","gridline","SymbolDefinition","Line","from","to","strokeColor","strokeWidth","offset","place","Point","setVisualCurveHandles","stringStyle","handleBeforeString","handleAfterString","handleMovable","Color","handleStationary","onMouseEnter","cursor","onMouseLeave","onMouseDrag","travelled","subtract","newPosition","lastSegment","onMouseUp","firstSegment","handlePosition","handleEditor","handleEditorHasSize","buildHandleEditorCanvas","HandleEditorInstance","React","keyframeKey","destroy","KeyframeEditor","keyframeEditor","keyframeEditorHasSize","buildKeyframeEditorCanvas","AnimateMode","heWidth","keSize","setTheKeyFrame","circle1","container2","clientHeight","smallestLength","min","container3","PlayController","play","goToNext","goToPrev","goToFirst","goToLast","addEventListener","removeEventListener","borderTop","gridColumnStart","ViewMode","window","innerWidth","documentElement","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","resolve"],"mappings":"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","file":"app.040137b4.js","sourcesContent":["import { observable } from 'mobx'\nimport paper from 'paper'\n\nimport AnimatableItem from '../AnimatableItem'\n\nclass Rectangle extends AnimatableItem {\n  // Canvas Size Relative Values (0-100)\n  static get WIDTH() { return 10 }\n  static get HEIGHT() { return 10 }\n  static get RADIUS() { return 0 }\n\n  @observable _width = Rectangle.WIDTH\n  @observable _height = Rectangle.HEIGHT\n  @observable _radius = Rectangle.RADIUS\n\n  get width() { return this._width }\n  get height() { return this._height }\n  get radius() { return this._radius }\n\n  set width(value) {\n    // TODO: update this value using item.bounds and scale\n    this._width = value\n    this.recreate()\n  }\n\n  set height(value) {\n    // TODO: update this value using item.bounds and scale\n    this._height = value\n    this.recreate()\n  }\n\n  set radius(value) {\n    // TODO: update this value using item.bounds and scale\n    this._radius = value\n    this.recreate()\n  }\n\n  onCreate(itemProps) {\n    const { x, y } = this.position\n    const absX = this.absolute(x)\n    const absY = this.absolute(y, 'height')\n    const absWidth = this.absolute(this.width)\n    const absHeight = this.absolute(this.height)\n\n    new paper.Path.Rectangle({\n      ...itemProps,\n      point: [absX - (absWidth / 2), absY - (absHeight / 2)],\n      size: [absWidth, absHeight],\n      radius: (this.radius / 100) * (Math.max(absWidth, absHeight) / 2),\n    })\n  }\n}\n\nexport default Rectangle\n","import Circle from './items/Circle'\nimport Rectangle from './items/Rectangle'\n\nconst setLength = (animation) => {\n  animation.setLength(200)\n}\n\nconst setRange = (animation) => {\n  animation.setIn(60)\n  animation.setOut(140)\n}\n\nconst addItems = (canvas) => {\n  const circle = new Circle({ key: 'circle1' })\n  circle.addKey('x', 60, 25)\n  circle.addKey('y', 60, 25)\n  circle.addKey('x', 90, 75)\n  circle.addKey('y', 90, 50)\n  circle.addKey('scale', 60, 100)\n  circle.addKey('scale', 90, 250)\n  circle.addKey('scale', 100, 250)\n  circle.addKey('scale', 130, 100)\n  canvas.add(circle)\n\n  const rect = new Rectangle({ key: 'rect1' })\n\n  rect.addKey('rotation', 80, 0)\n  rect.addKey('rotation', 140, 360)\n  rect.addKey('scale', 80, 0.001)\n  rect.addKey('scale', 140, 100)\n  canvas.add(rect)\n  rect.width = 20\n  rect.height = 10\n}\n\nexport default {\n  setLength,\n  setRange,\n  addItems,\n}\n","import { observable, action } from 'mobx'\nimport paper from 'paper'\n\nimport Animation from './Animation'\n\nclass Project {\n  constructor(rootStore) {\n    // FIXME: remove reference to rootStore\n    this.rootStore = rootStore\n    this.setName('My Animation')\n  }\n\n  @observable name = ''\n\n  @action setName(name) {\n    this.name = name\n  }\n\n  clear = () => {\n    paper.project.clear()\n    paper.project.remove()\n\n    const { canvas, animation } = this.rootStore\n    canvas.setSize(undefined, undefined)\n    animation.setIn(Animation.FIRST)\n    animation.setOut(animation.frames)\n  }\n\n  // load() {\n  //   // load project file\n  // }\n\n  // save() {\n  //   // save project file\n  // }\n\n  // render() {\n  //   // render canvas animation to frames\n  // }\n}\n\nexport default Project\n","import { observable, action } from 'mobx'\nimport paper from 'paper'\n\nclass Canvas {\n  constructor(rootStore) {\n    this.rootStore = rootStore\n  }\n\n  @observable width\n  @observable height\n  @observable _color = '#000000'\n  @observable background\n  @observable animatables = {}\n  @observable tool\n  @observable selected\n\n  setSize(width, height) {\n    // allows the canvas element one tick to recognize size changes\n    const setSizeAction = action(() => {\n      this.height = height\n      this.width = width\n    })\n    setTimeout(setSizeAction, 1)\n  }\n\n  attatchTo = (id) => {\n    const element = document.getElementById(id)\n    paper.setup(element)\n  }\n\n  init() {\n    paper.view.autoUpdate = false\n    this.background = new paper.Path.Rectangle({\n      topLeft: [0, 0],\n      bottomRight: [paper.view.element.width, paper.view.element.height],\n      fillColor: this.color,\n    })\n    this.draw(this.rootStore.animation.firstFrame)\n  }\n\n  get color() { return this._color }\n  set color(value) {\n    this._color = value\n    this.background.fillColor = value\n  }\n\n  @action add = (animatable) => {\n    animatable.create(this)\n    this.animatables = {\n      ...this.animatables,\n      [animatable.key]: animatable,\n    }\n\n    if (this.tool === 'SELECT') {\n      this.addListenersAndSelect(animatable)\n    }\n\n    this.draw()\n  }\n\n  @action remove = (animatable) => {\n    animatable.item.off('mousedown', this.handleItemMouseDown)\n    animatable.item.remove()\n\n    const clone = { ...this.animatables }\n    delete clone[animatable.key]\n    this.animatables = clone\n    this.draw()\n  }\n\n  @action setTool = (nextTool) => {\n    const prevTool = this.tool\n\n    const entering = toolId => (prevTool !== toolId && nextTool === toolId)\n    const exiting = toolId => (prevTool === toolId && nextTool !== toolId)\n\n    if (entering('SELECT')) { this.selectOn() }\n    if (exiting('SELECT')) { this.selectOff() }\n\n    if (entering('SETTINGS')) { this.rootStore.mode.settings = true }\n    if (exiting('SETTINGS')) { this.rootStore.mode.settings = false }\n\n    // Finally, set the tool in-memory\n    this.tool = nextTool\n  }\n\n  @action select = (item) => {\n    this.deselect()\n    item.selected = true // eslint-disable-line no-param-reassign\n    this.selected = this.animatables[item.name]\n    paper.view.update()\n  }\n\n  @action deselect = () => {\n    if (this.selected) {\n      this.selected.item.selected = false\n      this.selected = undefined\n    }\n    paper.view.update()\n  }\n\n  addListenersAndSelect = (animatable) => {\n    animatable.item.on('mousedown', this.handleItemMouseDown)\n    this.select(animatable.item)\n  }\n\n  handleItemMouseDown = (event) => {\n    event.stopPropagation()\n    this.select(event.currentTarget)\n  }\n\n  handleViewMouseDown = (event) => {\n    event.stopPropagation()\n    this.deselect()\n  }\n\n  forEachAnimatable = callback => (\n    Object.values(this.animatables).forEach(callback)\n  )\n\n  build = () => {\n    this.forEachAnimatable((animatable) => { animatable.create(this) })\n    this.draw()\n  }\n\n  draw = (frame) => {\n    const frameToDraw = frame || this.rootStore.animation.now\n    console.log('drawing frame', frameToDraw)\n    this.forEachAnimatable((animatable) => { animatable.draw(frameToDraw) })\n    if (paper.view) paper.view.update()\n  }\n\n  selectOn = () => {\n    this.forEachAnimatable((animatable) => {\n      animatable.item.on('mousedown', this.handleItemMouseDown)\n    })\n    paper.view.on('mousedown', this.handleViewMouseDown)\n  }\n\n  selectOff = () => {\n    this.forEachAnimatable((animatable) => {\n      animatable.item.off('mousedown', this.handleItemMouseDown)\n    })\n    paper.view.off('mousedown', this.handleViewMouseDown)\n    this.deselect()\n  }\n}\n\nexport default Canvas\n","const observeAnimatableTree = (observableObj) => {\n  const observableKeys = observableObj.constructor.OBSERVABLES\n  return observableKeys.map((key) => {\n    if (key === 'keyframes') {\n      return Object.keys(observableObj.keyframes).map(keyFrType => (\n        observableObj.keyframes[keyFrType].map(observeAnimatableTree)\n      ))\n    }\n\n    const value = observableObj[key]\n    if (value.constructor.OBSERVABLES) {\n      return observeAnimatableTree(value)\n    }\n\n    return value\n  })\n}\n\nexport default observeAnimatableTree\n","import { observable, action } from 'mobx'\n\nclass Mode {\n  @observable current = null\n  @observable settings = false\n\n  @action set = (m) => {\n    this.current = m\n  }\n}\n\nexport default Mode\n","import { observable, reaction } from 'mobx'\n\nimport Project from './prototypes/Project'\nimport Canvas from './prototypes/Canvas'\nimport Animation from './prototypes/Animation'\nimport ModeStore from './prototypes/ModeStore'\n\nimport observeAnimatableTree from './util/observeAnimatableTree'\n\nclass RootStore {\n  @observable project\n  @observable canvas\n  @observable animation\n  @observable mode\n\n  constructor() {\n    this.project = new Project(this)\n    this.canvas = new Canvas(this)\n    this.animation = new Animation()\n    this.mode = new ModeStore()\n\n    // Reacts to all changes made to animatable item properties and redraws the canvas\n    reaction(\n      () => ([\n        this.animation.now,\n        this.canvas.color,\n        Object.values(this.canvas.animatables).map(observeAnimatableTree),\n      ]),\n      () => this.canvas.draw()\n    )\n  }\n}\n\nexport default RootStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// Root Application Container\nimport App from './containers/App'\nimport RootStore from './store'\n\n// Styles\nimport '../css'\n\nconst store = new RootStore()\nconst appNode = document.getElementById('app')\n\nReactDOM.render(\n  <App store={store} />,\n  appNode\n)\n","import React, { Component } from 'react'\nimport { hot } from 'react-hot-loader'\nimport { observer } from 'mobx-react'\n\nimport ModeController from './ModeController'\nimport BuildMode from './BuildMode'\nimport AnimateMode from './AnimateMode'\nimport ViewMode from './ViewMode'\nimport ExportMode from './ExportMode'\nimport Grid from '../components/Grid'\n\n@observer\nclass App extends Component {\n  componentDidMount() {\n    const { store } = this.props\n    store.mode.set('BUILD')\n    // setTimeout(() => { store.mode.set('ANIMATE') }, 100)\n    store.canvas.setTool('SETTINGS')\n  }\n\n  render() {\n    const { store } = this.props\n    return (\n      <Grid\n        minHeight=\"100vh\"\n        gridTemplateRows=\"60px 1fr\"\n      >\n        <ModeController mode={store.mode} />\n        {\n          store.mode.current === 'BUILD'\n          && <BuildMode store={store} />\n        }\n        {\n          store.mode.current === 'ANIMATE'\n          && <AnimateMode store={store} />\n        }\n        {\n          store.mode.current === 'VIEW'\n          && <ViewMode store={store} />\n        }\n        {\n          store.mode.current === 'EXPORT'\n          && <ExportMode store={store} />\n        }\n      </Grid>\n    )\n  }\n}\n\nexport default hot(module)(App)\n","import React from 'react'\n\nconst playbarStyle = { height: '10px', margin: '10px 0px' }\n\nconst Playbar = ({\n  fullWidth,\n  totalFrames,\n  inPoint,\n  outPoint,\n  now,\n  ABSOLUTE_FIRST,\n}) => {\n  const playbarWidth = fullWidth || 0\n\n  const per = playbarWidth / totalFrames\n  const marker = totalFrames > 1 ? per : 0\n  const head = parseInt((inPoint - ABSOLUTE_FIRST) * per)\n  const tail = parseInt((totalFrames - outPoint) * per)\n\n  let activeHead = parseInt((now * per) - head)\n  if (totalFrames === 1) {\n    activeHead = per\n  } else if (now === inPoint) {\n    activeHead = 0\n  } else if (now === outPoint) {\n    activeHead = playbarWidth - head - tail - marker\n  }\n  const activeTail = now === outPoint ? 0 : playbarWidth - head - tail - activeHead - marker\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{\n        ...playbarStyle,\n        width: head,\n        backgroundColor: 'rgb(150, 160, 170)' }}\n      />\n      <div style={{\n        ...playbarStyle,\n        width: activeHead,\n        backgroundColor: 'rgb(220, 225, 240)' }}\n      />\n      <div style={{\n        ...playbarStyle,\n        width: marker,\n        height: '20px',\n        marginTop: '5px',\n        backgroundColor: 'rgb(30, 155, 255)' }}\n      />\n      <div style={{\n        ...playbarStyle,\n        width: activeTail,\n        backgroundColor: 'rgb(220, 225, 240)' }}\n      />\n      <div style={{\n        ...playbarStyle,\n        width: tail,\n        backgroundColor: 'rgb(150, 160, 170)' }}\n      />\n    </div>\n  )\n}\n\nexport default Playbar\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Animation from '../prototypes/Animation'\nimport Canvas from '../components/Canvas'\nimport Playbar from '../components/Playbar'\n\n@observer\nclass Viewer extends Component {\n  canvasHasSize = () => {\n    const { canvas, setup } = this.props\n    canvas.attatchTo('paper-canvas')\n    canvas.init()\n    setup()\n  }\n\n  render() {\n    const { canvas, animation } = this.props\n    return (\n      <React.Fragment>\n        <Canvas\n          id=\"paper-canvas\"\n          width={canvas.width}\n          height={canvas.height}\n          hasSize={this.canvasHasSize}\n        />\n        <Playbar\n          fullWidth={canvas.width}\n          totalFrames={animation.frames}\n          inPoint={animation.firstFrame}\n          outPoint={animation.lastFrame}\n          now={animation.now}\n          ABSOLUTE_FIRST={Animation.FIRST}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Viewer\n","import { observable } from 'mobx'\nimport paper from 'paper'\n\nimport AnimatableItem from '../AnimatableItem'\n\nclass Circle extends AnimatableItem {\n  // Canvas Size Relative Values (0-100)\n  static get RADIUS() { return 10 }\n\n  @observable _radius = Circle.RADIUS\n\n  get radius() { return this._radius }\n  set radius(value) {\n    // TODO: update this value using item.bounds and scale\n    this._radius = value\n    this.recreate()\n  }\n\n  onCreate(itemProps) {\n    const { x, y } = this.position\n    new paper.Path.Circle({\n      ...itemProps,\n      center: [this.absolute(x), this.absolute(y, 'height')],\n      radius: this.absolute(this.radius) / 2,\n    })\n  }\n}\n\nexport default Circle\n","import React from 'react'\n\nconst GridItem = ({ id, children, ...style }) => (\n  <div id={id} style={style}>\n    {children}\n  </div>\n)\n\nexport default GridItem\n","import { observable } from 'mobx'\n\nclass Handle {\n  static get MAX() { return 100 }\n  static get STEP() { return 10 }\n  static get OBSERVABLES() {\n    return ['influence', 'distance']\n  }\n\n  @observable _influence\n  @observable _distance\n\n  constructor(type) {\n    this.type = type\n    this.influence = 50\n    this.distance = 0\n  }\n\n  get influence() { return this._influence }\n  get distance() { return this._distance }\n  get position() {\n    let x = this.influence\n    let y = this.distance\n    if (this.type === 'IN') {\n      x = Handle.MAX - this.influence\n      y = Handle.MAX - this.distance\n    }\n    x /= Handle.MAX\n    y /= Handle.MAX\n    return { x, y }\n  }\n\n  set influence(value) {\n    this._influence = value\n  }\n\n  set distance(value) {\n    this._distance = value\n  }\n\n  set position({ x, y }) {\n    const newX = x * Handle.MAX\n    const newY = x * Handle.MAX\n    if (this.type === 'IN') {\n      this.influence = Handle.MAX - newX\n      this.distance = Handle.MAX - newY\n    } else {\n      this.influence = newX\n      this.distance = newY\n    }\n  }\n}\n\nexport default Handle\n","import { observable, action } from 'mobx'\n\nclass Animation {\n  static get FIRST() { return 1 }\n  static get PLAYBACK_MODES() { return ['LOOP', 'ONCE'] }\n\n  constructor() {\n    this.setLength(100)\n  }\n\n  @observable frames = 1\n  @observable firstFrame = Animation.FIRST\n  @observable lastFrame = 1\n  @observable fps = 30\n  @observable now = this.firstFrame\n  @observable playing = false\n  @observable sync = 0\n  @observable requestId = null\n  @observable mode = 'LOOP'\n\n  @action setLength(length) {\n    this.frames = length\n    if (length < this.lastFrame) {\n      this.lastFrame = length\n    }\n  }\n\n  @action setIn = (f) => {\n    if (f < Animation.FIRST || f > this.frames) return\n    this.firstFrame = f\n    if (this.now < f) {\n      this.goToFrame(f)\n    }\n  }\n\n  @action setOut = (f) => {\n    if (f < Animation.FIRST || f > this.frames) return\n    this.lastFrame = f\n    if (this.now > f) {\n      this.goToFrame(f)\n    }\n  }\n\n  nextFrame = () => {\n    const later = this.now + 1\n    if (later > this.lastFrame) {\n      if (this.mode === 'LOOP') return this.firstFrame\n      return null\n    }\n    return later\n  }\n\n  prevFrame = () => {\n    const earlier = this.now - 1\n    if (earlier < this.firstFrame) {\n      if (this.mode === 'LOOP') return this.lastFrame\n      return null\n    }\n    return earlier\n  }\n\n  @action play = () => {\n    if (this.nextFrame() === null) return\n    this.playing = true\n    this.animateAtRate(() => {\n      const nextFrame = this.nextFrame()\n      if (nextFrame === null) return this.pause()\n      this.now = nextFrame\n    })\n  }\n\n  @action pause = () => {\n    this.playing = false\n    if (this.requestId) cancelAnimationFrame(this.requestId)\n  }\n\n  @action goToFrame = (frame) => {\n    this.now = frame\n  }\n\n  @action goToFirst = () => {\n    this.goToFrame(this.firstFrame)\n  }\n\n  @action goToLast = () => {\n    this.goToFrame(this.lastFrame)\n  }\n\n  @action goToNext = () => {\n    const nextFrame = this.nextFrame()\n    if (nextFrame === null) return\n    this.goToFrame(nextFrame)\n  }\n\n  @action goToPrev = () => {\n    const prevFrame = this.prevFrame()\n    if (prevFrame === null) return\n    this.goToFrame(prevFrame)\n  }\n\n  @action animateAtRate = (func) => {\n    const interval = 1000 / this.fps\n    let then = Date.now()\n\n    const loop = () => {\n      if (this.playing === false) return\n      this.requestId = requestAnimationFrame(loop)\n      const now = Date.now()\n      const delta = now - then\n      if (delta >= interval) {\n        then = now - (delta % interval)\n        this.sync = Math.round(delta - interval - (delta % interval))\n        func()\n      }\n    }\n    loop()\n  }\n}\n\nexport default Animation\n","import React from 'react'\n\nconst Grid = ({ children, ...style }) => (\n  <div style={{ display: 'grid', ...style }}>\n    {children}\n  </div>\n)\n\nexport default Grid\n","const cssContext = require.context(\n  '!!file-loader?name=[name].[ext]!.',\n  true,\n  /\\.(css)$/\n)\n\ncssContext.keys().forEach(cssContext)\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Circle from '../prototypes/items/Circle'\nimport Rectangle from '../prototypes/items/Rectangle'\n\n@observer\nclass ToolController extends Component {\n  choose = (event) => {\n    event.preventDefault()\n    this.props.setTool(event.currentTarget.id)\n  }\n\n  addCircle = () => {\n    const { existing } = this.props\n    const circle = new Circle({\n      key: `circle-${Object.keys(existing).length}`,\n    })\n    this.props.add(circle)\n  }\n\n  addRectangle = () => {\n    const { existing } = this.props\n    const rect = new Rectangle({\n      key: `rect-${Object.keys(existing).length}`,\n    })\n    this.props.add(rect)\n  }\n\n  render() {\n    const { tool } = this.props\n\n    return (\n      <div style={{ display: 'flex', padding: '10px' }}>\n        <button\n          type=\"button\"\n          id=\"SETTINGS\"\n          onClick={this.choose}\n          {...(tool === 'SETTINGS' ? { primary: 'true' } : {})}\n        >\n          <div>*</div>\n        </button>\n        <button\n          type=\"button\"\n          id=\"SELECT\"\n          onClick={this.choose}\n          {...(tool === 'SELECT' ? { primary: 'true' } : {})}\n        >\n          <div style={{ transform: 'rotate(-135deg)' }}>&#10148;</div>\n        </button>\n        {/* <button\n          type=\"button\"\n          id=\"DRAW\"\n          onClick={this.choose}\n          {...(tool === 'DRAW' ? { primary: 'true' } : {})}\n        >\n          ✎\n        </button> */}\n\n        <button type=\"button\" onClick={this.addCircle}>+ Circle</button>\n        <button type=\"button\" onClick={this.addRectangle}>+ Rectangle</button>\n      </div>\n    )\n  }\n}\n\nexport default ToolController\n","/* eslint react/sort-comp: 0 */\n\nimport React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\n@observer\nclass IntegerInput extends Component {\n  state = {\n    localValue: 0,\n  }\n\n  componentDidMount() {\n    const { item, property } = this.props\n    if (item[property] !== this.state.localValue) {\n      this.setState({ localValue: item[property] })\n    }\n  }\n\n  onChange = (event) => {\n    this.setState({ localValue: event.target.value })\n  }\n\n  onBlur = () => {\n    const { item, property } = this.props\n    const { localValue } = this.state\n\n    const possibleInt = parseInt(localValue)\n    let result = item[property]\n    if (Number.isInteger(possibleInt)) {\n      result = possibleInt\n    }\n\n    item[property] = result\n    this.setState({ localValue: result })\n  }\n\n  handleKeyDown = (event) => {\n    const { key, shiftKey } = event\n    if (key === 'ArrowUp' && shiftKey) {\n      this.incrementBy(10)\n    } else if (key === 'ArrowUp') {\n      this.incrementBy(1)\n    } else if (key === 'ArrowDown' && shiftKey) {\n      this.decrementBy(10)\n    } else if (key === 'ArrowDown') {\n      this.decrementBy(1)\n    }\n  }\n\n  changeBy = operation => (amount) => {\n    const { item, property } = this.props\n    const current = item[property]\n    const next = operation(current, amount)\n    item[property] = next\n    this.setState({ localValue: next })\n  }\n\n  incrementBy = this.changeBy((a, b) => a + b)\n  decrementBy = this.changeBy((a, b) => a - b)\n\n  render() {\n    const { localValue } = this.state\n    return (\n      <input\n        type=\"text\"\n        style={{ width: '60px', marginRight: '20px', textAlign: 'center' }}\n        value={localValue}\n        onChange={this.onChange}\n        onKeyDown={this.handleKeyDown}\n        onBlur={this.onBlur}\n      />\n    )\n  }\n}\n\nexport default IntegerInput\n","import React, { useRef } from 'react'\n\nconst style = {\n  container: {\n    position: 'fixed',\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    overflow: 'auto',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n  },\n  body: {\n    backgroundColor: '#fefefe',\n    margin: '15% auto',\n    border: '1px solid #888',\n    width: '80%',\n  },\n  content: {\n    padding: '16px',\n  },\n}\n\nconst Modal = ({ children, open, handleClose }) => {\n  const clickawayEl = useRef(null)\n\n  const onClickaway = (event) => {\n    if (clickawayEl.current.contains(event.target)) return\n    handleClose()\n  }\n\n  return (\n    open === false ? null : (\n      <div style={style.container} onClick={onClickaway}>\n        <div ref={clickawayEl} style={style.body}>\n          <div style={style.content}>{children}</div>\n        </div>\n      </div>\n    )\n  )\n}\n\nexport default Modal\n","// encapsulates ValueEditor, implements editing the paper properties of an AnimatibleItem\n\nimport React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport IntegerInput from '../components/IntegerInput'\n\n@observer\nclass PropertyEditor extends Component {\n  classControls() {\n    const { item } = this.props\n    const itemClass = item.constructor.name\n\n    if (itemClass === 'Circle') {\n      return (\n        <React.Fragment>\n          <label>Radius</label>\n          <div style={{ display: 'flex' }}>\n            <IntegerInput item={item} property=\"radius\" />\n          </div>\n        </React.Fragment>\n      )\n    }\n\n    if (itemClass === 'Rectangle') {\n      return (\n        <React.Fragment>\n          <label>Size</label>\n          <div style={{ display: 'flex' }}>\n            <IntegerInput item={item} property=\"width\" />\n            <IntegerInput item={item} property=\"height\" />\n          </div>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { item } = this.props\n\n    if (item === undefined) {\n      return (\n        <h3 style={{ padding: '10px', color: 'darkgray' }}>\n          Select an Item on the Canvas.\n        </h3>\n      )\n    }\n\n    return (\n      <div style={{ padding: '10px' }}>\n        <h4>{item.key}</h4>\n        <label>Position</label>\n        <div style={{ display: 'flex' }}>\n          <IntegerInput item={item} property=\"x\" />\n          <IntegerInput item={item} property=\"y\" />\n        </div>\n\n        <label>Scale</label>\n        <div style={{ display: 'flex' }}>\n          <IntegerInput item={item} property=\"scale\" />\n        </div>\n\n        <label>Rotation</label>\n        <div style={{ display: 'flex' }}>\n          <IntegerInput item={item} property=\"rotation\" />\n        </div>\n\n        {this.classControls()}\n      </div>\n    )\n  }\n}\n\nexport default PropertyEditor\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Modal from '../components/Modal'\n\n@observer\nclass ProjectSettings extends Component {\n  setName = (event) => {\n    const { store } = this.props\n    store.project.setName(event.target.value)\n  }\n\n  setLength = (event) => {\n    const { store } = this.props\n    const length = parseInt(event.target.value)\n    store.animation.setLength(length)\n  }\n\n  setColor = (event) => {\n    const { store } = this.props\n    store.canvas.color = event.target.value\n  }\n\n  closeModal = () => this.props.store.canvas.setTool('SELECT')\n\n  render() {\n    const { store } = this.props\n\n    return (\n      <Modal open={store.mode.settings} handleClose={this.closeModal}>\n        <h3>Project Settings</h3>\n\n        <label>Project Name</label>\n        <input type=\"text\" value={store.project.name} onChange={this.setName} />\n\n        <label>Animation Length</label>\n        <input type=\"number\" step=\"1\" value={store.animation.frames} onChange={this.setLength} />\n\n        <label>Canvas Background</label>\n        <select value={store.canvas.color} onChange={this.setColor}>\n          <option value=\"#000000\">Black</option>\n          <option value=\"#ffffff\">White</option>\n        </select>\n\n        <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n          <button type=\"button\" onClick={this.closeModal}>Close</button>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nexport default ProjectSettings\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Viewer from './Viewer'\nimport ToolController from './ToolController'\nimport PropertyEditor from './PropertyEditor'\nimport ProjectSettings from './ProjectSettings'\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\nimport placeholder from '../prototypes/placeholder'\n\n@observer\nclass BuildMode extends Component {\n  state = {\n    ready: false,\n  }\n\n  componentDidMount() {\n    const { canvas } = this.props.store\n    const container = document.getElementById('build-container')\n    setTimeout(() => {\n      const width = Math.round(container.clientWidth) - 20\n      const height = Math.round((9 / 16) * width)\n      canvas.setSize(width, height)\n    }, 1)\n  }\n\n  componentWillUnmount() {\n    const { project, canvas } = this.props.store\n    canvas.selectOff()\n    project.clear()\n  }\n\n  setup = () => {\n    this.setState({ ready: true })\n    const { canvas } = this.props.store\n    canvas.build()\n\n    placeholder.setLength(this.props.store.animation)\n    placeholder.setRange(this.props.store.animation)\n    if (Object.keys(canvas.animatables).length === 0) {\n      placeholder.addItems(canvas)\n    }\n  }\n\n  add = (item) => {\n    const { canvas } = this.props.store\n    canvas.add(item)\n  }\n\n  render() {\n    const { canvas, animation } = this.props.store\n    const { ready } = this.state\n    return (\n      <React.Fragment>\n        <ProjectSettings store={this.props.store} />\n        <Grid\n          gridTemplateRows=\"auto 60px\"\n          gridTemplateColumns=\"auto 340px\"\n        >\n          <GridItem gridArea=\"1 / 1 / 1 / 2\" id=\"build-container\" padding=\"10px\" alignSelf=\"center\">\n            <Viewer canvas={canvas} animation={animation} setup={this.setup} />\n          </GridItem>\n          <GridItem gridArea=\"1 / 2 / 1 / 3\" backgroundColor=\"rgb(210, 210, 210)\">\n            { canvas && (\n              <PropertyEditor item={canvas.selected} />\n            )}\n          </GridItem>\n          <GridItem gridArea=\"2 / 1 / 2 / 3\" backgroundColor=\"rgb(180, 180, 180)\">\n            { ready && (\n              <ToolController\n                existing={canvas.animatables}\n                add={this.add}\n                tool={canvas.tool}\n                setTool={canvas.setTool}\n              />\n            )}\n          </GridItem>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default BuildMode\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\n@observer\nclass Canvas extends Component {\n  componentDidMount() {\n    this.testForAvailability()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.width === undefined) {\n      this.testForAvailability()\n    }\n  }\n\n  testForAvailability() {\n    const { width, hasSize } = this.props\n    if (width !== undefined) {\n      hasSize()\n    }\n  }\n\n  render() {\n    const { id, width, height } = this.props\n    if (width === undefined) return null\n    return (\n      <canvas\n        style={{ display: 'block' }}\n        id={id}\n        width={width}\n        height={height}\n      />\n    )\n  }\n}\n\nexport default Canvas\n","/* encapsulates Mode, implements:\n\n  | Viewer     | ExportEditor   |\n  |            |                |\n   ------------|                |\n  | Format     |                |\n  | Controller |                |\n\n*/\n\nimport React, { Component } from 'react'\n\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\nclass ExportMode extends Component {\n  render() {\n    return (\n      <Grid\n        gridTemplateRows=\"auto\"\n        gridTemplateColumns=\"auto\"\n        alignItems=\"center\"\n        justifyItems=\"center\"\n      >\n        <GridItem padding=\"10px\">\n          <h3 style={{ padding: '10px', color: 'darkgray' }}>\n            Feature under construction.\n          </h3>\n        </GridItem>\n      </Grid>\n    )\n  }\n}\n\nexport default ExportMode\n","module.exports = __webpack_public_path__ + \"bare.min.css\";","const makeRoot = (real, imag) => ({ real, imag })\n\nconst evaluate = (x, A, B, C, D) => {\n  const q0 = A * x\n  const B1 = q0 + B\n  const C2 = B1 * x + C\n  return {\n    Q: C2 * x + D,\n    dQ: (q0 + B1) * x + C2,\n    B1,\n    C2,\n  }\n}\n\nconst qdrtc = (A, B, C) => {\n  const b = -B / 2\n  const q = b * b - A * C\n  let X1 = 0\n  let Y1 = 0\n  let X2 = 0\n  let Y2 = 0\n\n  if (q < 0) {\n    const X = b / A\n    const Y = Math.sqrt(-q) / A\n    X1 = X\n    Y1 = Y\n    X2 = X\n    Y2 = -Y\n  } else {\n    Y1 = 0\n    Y2 = 0\n    const r = b + Math.sign(b) * Math.sqrt(q)\n    if (r === 0) {\n      X1 = C / A\n      X2 = -C / A\n    } else {\n      X1 = C / r\n      X2 = r / A\n    }\n  }\n  return [\n    makeRoot(X1, Y1),\n    makeRoot(X2, Y2),\n  ]\n}\n\nconst getCubicRoots = (A, B, C, D) => {\n  let X\n  let a\n  let b1\n  let c2\n  if (A === 0) {\n    X = undefined\n    a = B\n    b1 = C\n    c2 = D\n  } else if (D === 0) {\n    X = 0\n    a = A\n    b1 = B\n    c2 = C\n  } else {\n    a = A\n    X = -(B / A) / 3\n    let evalInfo = evaluate(X, A, B, C, D)\n    let q = evalInfo.Q\n    let dq = evalInfo.dQ\n    b1 = evalInfo.B1\n    c2 = evalInfo.C2\n\n    let t = q / A\n    let r = Math.abs(t) ** (1 / 3)\n    const s = Math.sign(t)\n    t = -dq / A\n    if (t > 0) {\n      r = 1.324717957244746 * Math.max(r, Math.sqrt(t))\n    }\n    let x0 = X - s * r\n    if (x0 !== X) {\n      const den = 1 + (100 * Number.EPSILON)\n      do {\n        X = x0\n        evalInfo = evaluate(X, A, B, C, D)\n        q = evalInfo.Q\n        dq = evalInfo.dQ\n        b1 = evalInfo.B1\n        c2 = evalInfo.C2\n        x0 = (dq === 0 ? X : X - (q / dq) / den)\n      } while (s * x0 > s * X)\n      if (Math.abs(A) * X * X > Math.abs(D / X)) {\n        c2 = -D / X\n        b1 = (c2 - C) / X\n      }\n    }\n  }\n  const roots = []\n  if (X !== undefined) {\n    roots.push(makeRoot(X, 0))\n  }\n  const quadInfo = qdrtc(a, b1, c2)\n  return roots.concat(quadInfo)\n}\n\nconst cubic = (x, a, b, c, d) => (\n  (a * (x ** 3)) + (b * (x ** 2)) + (c * x) + d\n)\n\nconst bezierCurve = ({ x2, x3, y2, y3 }) => {\n  /* x2, and x3 are the X values from the 2nd and 3rd points for a bezier\n      definition. For this use case, they must be between 0 - 1.\n  */\n  if (x2 > 1 || x2 < 0 || x3 > 1 || x3 < 0) {\n    throw Error('This bezier curve requires control values between 0 & 1')\n  }\n\n  // These constants were reduced from the Cubic Bézier curve definition, with\n  // values of (0, 0) and (1, 1) used for p1 & p4 respectively\n  const xA = 3 * x2 - 3 * x3 + 1\n  const xB = -1 * 6 * x2 + 3 * x3\n  const xC = 3 * x2\n\n  const yA = 3 * y2 - 3 * y3 + 1\n  const yB = -1 * 6 * y2 + 3 * y3\n  const yC = 3 * y2\n  const yD = 0\n\n  const t = (x) => {\n    const xD = -x\n    const roots = getCubicRoots(xA, xB, xC, xD)\n    roots.filter(r => (\n      r.imag === 0\n      && r.real.toFixed(10) >= 0\n      && r.real.toFixed(10) <= 1\n      && !Object.is(r.real, -0)\n    ))\n    // console.log(JSON.stringify(roots))\n    return roots[0].real\n  }\n\n  const y = (x) => {\n    const time = t(x)\n    return cubic(time, yA, yB, yC, yD)\n  }\n\n  return ({ t, y })\n}\n\nexport default bezierCurve\n","import { observable } from 'mobx'\n\nimport Handle from './Handle'\nimport bezierCurve from '../util/bezierCurve'\n\nclass Keyframe {\n  static get OBSERVABLES() {\n    return ['frame', 'value', 'handleIn', 'handleOut']\n  }\n\n  @observable frame\n  @observable value\n  @observable handleIn\n  @observable handleOut\n\n  constructor(frame, value) {\n    this.frame = frame\n    this.value = value\n    this.handleIn = new Handle('IN')\n    this.handleOut = new Handle('OUT')\n  }\n\n  static sort = (a, b) => (a.frame - b.frame)\n\n  static createCurve = (k1, k2) => (\n    bezierCurve({\n      x2: k1.handleOut.position.x,\n      y2: k1.handleOut.position.y,\n      x3: k2.handleIn.position.x,\n      y3: k2.handleIn.position.y,\n    })\n  )\n\n  static interpolate = (k1, k2, frame) => {\n    const curve = Keyframe.createCurve(k1, k2)\n    const timeRatio = (frame - k1.frame) / (k2.frame - k1.frame)\n    // BUG: Bezier Interpolation is broken for certain ranges\n    const valueRatio = curve.y(timeRatio)\n    const interpolated = ((k2.value - k1.value) * valueRatio) + k1.value\n    return interpolated\n  }\n}\n\nexport default Keyframe\n","import { observable, action } from 'mobx'\nimport paper from 'paper'\n\nimport Keyframe from './Keyframe'\n\nclass AnimatableItem {\n  // Canvas Size Relative Values (0-100)\n  static get X() { return 50 }\n  static get Y() { return 50 }\n\n  // Absolute Values\n  static get SCALE() { return 100 }\n  static get ROTATION() { return 0 }\n  static get FILL_COLOR() {\n    return {\n      hue: Math.floor(Math.random() * 361),\n      saturation: 0.4,\n      brightness: 1,\n    }\n  }\n\n  static get OBSERVABLES() {\n    return ['x', 'y', 'scale', 'rotation', 'fillColor', 'keyframes']\n  }\n\n  constructor({ key }) {\n    this.key = key\n  }\n\n  @observable canvas\n  @observable _x = AnimatableItem.X\n  @observable _y = AnimatableItem.Y\n  @observable _scale = AnimatableItem.SCALE\n  @observable _rotation = AnimatableItem.ROTATION\n  @observable _fillColor = AnimatableItem.FILL_COLOR\n  @observable keyframes = {\n    x: observable([]),\n    y: observable([]),\n    scale: observable([]),\n    rotation: observable([]),\n  }\n\n  get item() { return paper.project.activeLayer.children[this.key] }\n  get x() { return this._x }\n  get y() { return this._y }\n  get position() { return { x: this.x, y: this.y } }\n  get scale() { return this._scale }\n  get rotation() { return this._rotation }\n  get fillColor() { return this._fillColor }\n\n  set x(value) {\n    this.item.position.x = this.absolute(value)\n    this._x = value\n  }\n\n  set y(value) {\n    this.item.position.y = this.absolute(value, 'height')\n    this._y = value\n  }\n\n  set position({ x, y }) {\n    this.x = x\n    this.y = y\n  }\n\n  set scale(value) {\n    if (this.scale === 0 && value !== 0) {\n      this.item.remove()\n      this.create(this.canvas)\n      this.item.scale(this.fraction(value))\n    } else {\n      const scaleBy = value / this.scale\n      this.item.scale(scaleBy)\n    }\n    this._scale = value\n  }\n\n  set rotation(value) {\n    const rotateBy = value - this.rotation\n    this.item.rotate(rotateBy)\n    this._rotation = value\n  }\n\n  set fillColor(value) {\n    this.item.fillColor = value\n    this._fillColor = value\n  }\n\n  @action setCanvas(canvas) {\n    this.canvas = canvas\n  }\n\n  @action setUntrackedValues() {\n    this.item.scale(this.fraction(this.scale))\n    this.item.rotate(this.rotation)\n  }\n\n  @action updateKeyframes(property, keyframes) {\n    this.keyframes = {\n      ...this.keyframes,\n      [property]: keyframes,\n    }\n  }\n\n  addKey(property, frame, value) {\n    const k = new Keyframe(frame, value)\n    const keyframes = [...this.keyframes[property], k]\n    keyframes.sort(Keyframe.sort)\n    this.updateKeyframes(property, keyframes)\n  }\n\n  removeKey(property, frame) {\n    let keyframes = [...this.keyframes[property]]\n    keyframes = keyframes.filter(k => k.frame !== frame)\n    this.updateKeyframes(property, keyframes)\n  }\n\n  absolute = (value, dimension = 'width') => (\n    value / 100 * this.canvas[dimension]\n  )\n\n  fraction = value => (\n    value / 100\n  )\n\n  create(canvas) {\n    if (this.canvas === undefined) this.setCanvas(canvas)\n\n    const sharedProps = {\n      name: this.key,\n      fillColor: this.fillColor,\n    }\n\n    if (typeof this.onCreate === 'function') {\n      this.onCreate(sharedProps)\n    }\n\n    if (this.item !== undefined) this.setUntrackedValues()\n  }\n\n  recreate() {\n    this.item.remove()\n    this.create(this.canvas)\n    this.canvas.addListenersAndSelect(this)\n  }\n\n  draw(frame) {\n    if (this.item === undefined) return\n\n    Object.entries(this.keyframes).forEach(([property, keyframes]) => {\n      // Ignore `y` property\n      if (property === 'y') return\n      if (property === 'x') {\n        // Interpret `x` & `y` at the same time\n        const xKeyframes = keyframes\n        const yKeyframes = this.keyframes.y\n        if (xKeyframes.length === 0 && yKeyframes.length === 0) return\n        const xValue = this.valueForFrame(frame, xKeyframes)\n        const yValue = this.valueForFrame(frame, yKeyframes)\n        this.position = { x: xValue, y: yValue }\n      } else {\n        // Interpret all other properties individually\n        if (keyframes.length === 0) return\n        const value = this.valueForFrame(frame, keyframes)\n        this[property] = value\n      }\n    })\n  }\n\n  valueForFrame = (frame, keyframes) => {\n    const frames = keyframes.map(key => key.frame)\n\n    // is frame a keyframe\n    if (frames.includes(frame)) {\n      const where = frames.indexOf(frame)\n      return keyframes[where].value\n    }\n\n    // where is frame with respect to keyframes\n    frames.push(frame)\n    frames.sort((a, b) => a - b)\n    const where = frames.indexOf(frame)\n\n    // is frame before or after last key\n    if (where === 0) return keyframes[0].value\n    if (where === frames.length - 1) return keyframes[keyframes.length - 1].value\n\n    // frame is between two keys\n    const before = keyframes[where - 1]\n    const after = keyframes[where]\n    return Keyframe.interpolate(before, after, frame)\n  }\n}\n\nexport default AnimatableItem\n","import React, { Component } from 'react'\n\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\nclass ModeController extends Component {\n  navigate = (event) => {\n    event.preventDefault()\n    const { mode } = this.props\n    mode.set(event.target.textContent.toUpperCase())\n  }\n\n  render() {\n    const { current } = this.props.mode\n    return (\n      <Grid gridTemplateColumns=\"1fr 1fr 1fr 1fr\" borderBottom=\"1px solid rgb(230, 230, 230)\">\n        <GridItem display=\"grid\" alignItems=\"center\" justifyItems=\"center\">\n          <button\n            type=\"button\"\n            style={{ margin: '0px' }}\n            onClick={this.navigate}\n            {...(current === 'BUILD' ? { primary: 'true' } : {})}\n          >\n            Build\n          </button>\n        </GridItem>\n        <GridItem display=\"grid\" alignItems=\"center\" justifyItems=\"center\">\n          <button\n            type=\"button\"\n            style={{ margin: '0px' }}\n            onClick={this.navigate}\n            {...(current === 'ANIMATE' ? { primary: 'true' } : {})}\n          >\n            Animate\n          </button>\n        </GridItem>\n        <GridItem display=\"grid\" alignItems=\"center\" justifyItems=\"center\">\n          <button\n            type=\"button\"\n            style={{ margin: '0px' }}\n            onClick={this.navigate}\n            {...(current === 'VIEW' ? { primary: 'true' } : {})}\n          >\n            View\n          </button>\n        </GridItem>\n        <GridItem display=\"grid\" alignItems=\"center\" justifyItems=\"center\">\n          <button\n            type=\"button\"\n            style={{ margin: '0px' }}\n            onClick={this.navigate}\n            {...(current === 'EXPORT' ? { primary: 'true' } : {})}\n          >\n            Export\n          </button>\n        </GridItem>\n      </Grid>\n    )\n  }\n}\n\nexport default ModeController\n","import paper from 'paper'\n\nimport Handle from './Handle'\n\nclass HandleEditor {\n  constructor(trueWidth, keyframeBefore, keyframeAfter) {\n    this.trueWidth = trueWidth\n    this.keyframeBefore = keyframeBefore\n    this.keyframeAfter = keyframeAfter\n    this.paper = new paper.PaperScope()\n\n    this.element = undefined\n  }\n\n  attatchTo = (id) => {\n    const element = document.getElementById(id)\n    this.element = element\n    this.paper.setup(element)\n  }\n\n  destroy() {\n    this.paper.project.clear()\n    this.paper.project.remove()\n  }\n\n  init() {\n    // Assumes Width & Height are identical\n    this.padding = 10\n    this.width = this.trueWidth - (this.padding * 2)\n    const { width, padding } = this\n\n    const topLeft = [padding, padding]\n    const topRight = [width + padding, padding]\n    const bottomLeft = [padding, width + padding]\n    // const bottomRight = [width, width + padding]\n    const spacing = width / Handle.STEP\n    const center = this.trueWidth / 2\n\n    // Background\n    new this.paper.Path.Rectangle({\n      topLeft: [0, 0],\n      bottomRight: [this.trueWidth, this.trueWidth],\n      fillColor: 'rgb(210, 210, 210)',\n    })\n\n    // Gridlines\n    const gridline = new this.paper.SymbolDefinition(\n      new this.paper.Path.Line({\n        from: [0, 0],\n        to: [0, this.trueWidth],\n        // strokeColor: '#324252',\n        strokeColor: 'rgb(180, 180, 180)',\n        strokeWidth: 2,\n      })\n    )\n    for (let i = 0; i <= Handle.STEP; i += 1) {\n      const offset = padding + 0 + (spacing * i)\n      gridline.place(new this.paper.Point(offset, center))\n      const offAxis = gridline.place(new this.paper.Point(center, offset))\n      offAxis.rotate(90)\n    }\n\n    // Value Interpolation Curve\n    this.curve = new this.paper.Path.Line({\n      // strokeColor: '#2176ff',\n      strokeColor: 'rgb(30, 155, 255)',\n      strokeWidth: 2,\n      from: new this.paper.Point(bottomLeft),\n      to: new this.paper.Point(topRight),\n    })\n    this.setVisualCurveHandles()\n\n    // Handle Strings\n    const stringStyle = {\n      // strokeColor: '#2176ff',\n      strokeColor: 'rgb(30, 155, 255)',\n      strokeWidth: 2,\n    }\n    const handleBeforeString = new this.paper.Path.Line({\n      ...stringStyle,\n      from: bottomLeft,\n      to: this.handleBefore(),\n    })\n    const handleAfterString = new this.paper.Path.Line({\n      ...stringStyle,\n      from: this.handleAfter(),\n      to: topRight,\n    })\n\n    // Handle Grips\n    const handleMovable = new this.paper.SymbolDefinition(\n      new this.paper.Path.Circle({\n        point: topLeft,\n        radius: 6,\n        // strokeColor: '#2176ff',\n        strokeColor: 'rgb(30, 155, 255)',\n        strokeWidth: 2,\n        fillColor: new this.paper.Color(1, 0.01),\n      })\n    )\n    const handleStationary = new this.paper.SymbolDefinition(\n      new this.paper.Path.Rectangle({\n        point: [100, 100],\n        size: [10, 10],\n        // fillColor: '#2176ff',\n        fillColor: 'rgb(30, 155, 255)',\n      })\n    )\n    handleStationary.place(bottomLeft)\n    handleStationary.place(topRight)\n    const handleBefore = handleMovable.place(this.handleBefore())\n    const handleAfter = handleMovable.place(this.handleAfter())\n\n    // Handle Events\n    handleBefore.onMouseEnter = () => {\n      this.element.style.cursor = 'pointer'\n    }\n    handleBefore.onMouseLeave = () => {\n      this.element.style.cursor = 'default'\n    }\n    handleBefore.onMouseDrag = (event) => {\n      this.element.style.cursor = 'pointer'\n      const travelled = event.point.subtract(handleBefore.position)\n\n      if (Math.abs(travelled.x) >= (spacing / 2)) {\n        const newPosition = handleBefore.position.add({\n          y: 0,\n          x: (travelled.x / Math.abs(travelled.x)) * spacing,\n        })\n\n        handleBefore.position = newPosition\n        handleBeforeString.lastSegment.point = newPosition\n        this.keyframeBefore.handleOut.influence += Math.sign(travelled.x) * Handle.STEP\n        this.setVisualCurveHandles()\n      }\n\n      if (Math.abs(travelled.y) >= (spacing / 2)) {\n        const newPosition = handleBefore.position.add({\n          x: 0,\n          y: (travelled.y / Math.abs(travelled.y)) * spacing,\n        })\n\n        handleBefore.position = newPosition\n        handleBeforeString.lastSegment.point = newPosition\n        this.keyframeBefore.handleOut.distance += -1 * Math.sign(travelled.y) * Handle.STEP\n        this.setVisualCurveHandles()\n      }\n    }\n    handleBefore.onMouseUp = () => {\n      this.element.style.cursor = 'default'\n    }\n\n    handleAfter.onMouseEnter = () => {\n      this.element.style.cursor = 'pointer'\n    }\n    handleAfter.onMouseLeave = () => {\n      this.element.style.cursor = 'default'\n    }\n    handleAfter.onMouseDrag = (event) => {\n      this.element.style.cursor = 'pointer'\n      const travelled = event.point.subtract(handleAfter.position)\n\n      if (Math.abs(travelled.x) >= (spacing / 2)) {\n        const newPosition = handleAfter.position.add({\n          y: 0,\n          x: (travelled.x / Math.abs(travelled.x)) * spacing,\n        })\n\n        handleAfter.position = newPosition\n        handleAfterString.firstSegment.point = newPosition\n        this.keyframeAfter.handleIn.influence += -1 * Math.sign(travelled.x) * Handle.STEP\n        this.setVisualCurveHandles()\n      }\n\n      if (Math.abs(travelled.y) >= (spacing / 2)) {\n        const newPosition = handleAfter.position.add({\n          x: 0,\n          y: (travelled.y / Math.abs(travelled.y)) * spacing,\n        })\n\n        handleAfter.position = newPosition\n        handleAfterString.firstSegment.point = newPosition\n        this.keyframeAfter.handleIn.distance += Math.sign(travelled.y) * Handle.STEP\n        this.setVisualCurveHandles()\n      }\n    }\n    handleAfter.onMouseUp = () => {\n      this.element.style.cursor = 'default'\n    }\n  }\n\n\n  handleBefore = () => (\n    this.absoluteHandlePosition(this.keyframeBefore.handleOut.position)\n  )\n\n  handleAfter = () => (\n    this.absoluteHandlePosition(this.keyframeAfter.handleIn.position)\n  )\n\n  absoluteHandlePosition(handlePosition) {\n    return ([\n      handlePosition.x * this.width + this.padding,\n      // Compensates for 4th quadrant cartesian system\n      this.width - (handlePosition.y * this.width) + this.padding,\n    ])\n  }\n\n  setVisualCurveHandles() {\n    if (this.curve) {\n      this.curve.firstSegment.handleOut = new this.paper.Point(\n        this.keyframeBefore.handleOut.influence * this.width / Handle.MAX,\n        -1 * this.keyframeBefore.handleOut.distance * this.width / Handle.MAX\n      )\n      this.curve.lastSegment.handleIn = new this.paper.Point(\n        -1 * this.keyframeAfter.handleIn.influence * this.width / Handle.MAX,\n        this.keyframeAfter.handleIn.distance * this.width / Handle.MAX\n      )\n    }\n  }\n}\n\nexport default HandleEditor\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport Canvas from '../components/Canvas'\n\nimport HandleEditorInstance from '../prototypes/HandleEditor'\n\n@observer\nclass HandleEditor extends React.Component {\n  handleEditor\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.keyframeKey !== undefined && prevProps.keyframeKey !== this.props.keyframeKey) {\n      if (this.handleEditor) this.handleEditor.destroy()\n      this.buildHandleEditorCanvas()\n    }\n  }\n\n  handleEditorHasSize = () => {\n    this.buildHandleEditorCanvas()\n  }\n\n  buildHandleEditorCanvas = () => {\n    const { width, keyframeBefore, keyframeAfter } = this.props\n    this.handleEditor = new HandleEditorInstance(width, keyframeBefore, keyframeAfter)\n    this.handleEditor.attatchTo('handle-editor')\n    this.handleEditor.init()\n  }\n\n  render() {\n    const { width, keyframeKey } = this.props\n\n    if (keyframeKey === undefined) {\n      return (\n        <h3 style={{ padding: '10px', color: 'darkgray' }}>\n          Select a Keyframe on the Timeline.\n        </h3>\n      )\n    }\n\n    return (\n      <div style={{ padding: '10px' }}>\n        <Canvas\n          id=\"handle-editor\"\n          width={width}\n          height={width}\n          hasSize={this.handleEditorHasSize}\n        />\n      </div>\n    )\n  }\n}\n\nexport default HandleEditor\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport Canvas from '../components/Canvas'\n\n@observer\nclass KeyframeEditor extends React.Component {\n  keyframeEditor\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selected !== undefined && prevProps.selected !== this.props.selected) {\n      if (this.keyframeEditor) this.keyframeEditor.destroy()\n      this.buildKeyframeEditorCanvas()\n    }\n  }\n\n  keyframeEditorHasSize = () => {\n    this.buildKeyframeEditorCanvas()\n  }\n\n  buildKeyframeEditorCanvas = () => {\n    const { width, item } = this.props\n    // this.keyframeEditor = new KeyframeEditorInstance(width, keyframeBefore, keyframeAfter)\n    // this.keyframeEditor.attatchTo('keyframe-editor')\n    // this.keyframeEditor.init()\n  }\n\n  render() {\n    const { size, selected } = this.props\n\n    if (selected === undefined) {\n      return (\n        <h3 style={{ padding: '10px', color: 'grey' }}>\n          Select an Item to view its Keyframes.\n        </h3>\n      )\n    }\n\n    return (\n      <div style={{ padding: '10px' }}>\n        <Canvas\n          id=\"keyframe-editor\"\n          width={size.width}\n          height={size.height}\n          hasSize={this.keyframeEditorHasSize}\n        />\n      </div>\n    )\n  }\n}\n\nexport default KeyframeEditor\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Viewer from './Viewer'\nimport HandleEditor from './HandleEditor'\nimport KeyframeEditor from './KeyframeEditor'\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\n@observer\nclass AnimateMode extends Component {\n  state = {\n    heWidth: undefined,\n    keSize: undefined,\n    // TODO: move these somewhere else\n    keyframeKey: undefined,\n    keyframeBefore: undefined,\n    keyframeAfter: undefined,\n  }\n\n  componentDidMount() {\n    const { canvas } = this.props.store\n    const container = document.getElementById('view-container')\n    setTimeout(() => {\n      const width = Math.round(container.clientWidth) - 20\n      const height = Math.round((9 / 16) * width)\n      canvas.setSize(width, height)\n    }, 1)\n\n    const container2 = document.getElementById('handle-container')\n    setTimeout(() => {\n      const width = Math.round(container2.clientWidth) - 20\n      const height = Math.round(container2.clientHeight) - 20\n      const smallestLength = Math.min(width, height)\n      this.setState({ heWidth: smallestLength })\n    }, 1)\n\n    const container3 = document.getElementById('keyframe-container')\n    setTimeout(() => {\n      const width = Math.round(container3.clientWidth) - 20\n      const height = Math.round(container3.clientHeight) - 20\n      this.setState({ keSize: { width, height } })\n    }, 1)\n  }\n\n  componentWillUnmount() {\n    const { canvas, project } = this.props.store\n    canvas.selectOff()\n    project.clear()\n  }\n\n  setup = () => {\n    const { canvas } = this.props.store\n    canvas.build()\n    canvas.setTool('SELECT')\n  }\n\n  setTheKeyFrame = () => {\n    if (this.state.keyframeKey === undefined) {\n      this.setState({\n        keyframeKey: 'circle1.keyframes.scale[0]',\n        keyframeBefore: this.props.store.canvas.animatables.circle1.keyframes.scale[0],\n        keyframeAfter: this.props.store.canvas.animatables.circle1.keyframes.scale[1],\n      })\n    } else {\n      this.setState({\n        keyframeKey: 'circle1.keyframes.x[0]',\n        keyframeBefore: this.props.store.canvas.animatables.circle1.keyframes.x[0],\n        keyframeAfter: this.props.store.canvas.animatables.circle1.keyframes.x[1],\n      })\n    }\n  }\n\n  render() {\n    const { canvas, animation } = this.props.store\n    const { heWidth, keSize, keyframeKey, keyframeBefore, keyframeAfter } = this.state\n    return (\n      <Grid\n        gridTemplateRows=\"auto 340px\"\n        gridTemplateColumns=\"auto 400px\"\n      >\n        <GridItem id=\"view-container\" padding=\"10px\" gridArea=\"1 / 1 / 1 / 2\">\n          <Viewer canvas={canvas} animation={animation} setup={this.setup} />\n        </GridItem>\n        <GridItem id=\"handle-container\" gridArea=\"1 / 2 / 1 / 3\" backgroundColor=\"rgb(210, 210, 210)\">\n          <HandleEditor\n            width={heWidth}\n            keyframeKey={keyframeKey}\n            keyframeBefore={keyframeBefore}\n            keyframeAfter={keyframeAfter}\n          />\n        </GridItem>\n        <GridItem id=\"keyframe-container\" gridArea=\"2 / 1 / 2 / 3\" backgroundColor=\"rgb(180, 180, 180)\">\n          {/* <button type=\"button\" onClick={this.setTheKeyFrame}>I&#39;m a keyframe</button> */}\n          <KeyframeEditor\n            size={keSize}\n            // selected={selected}\n            item={canvas.selected}\n          />\n        </GridItem>\n      </Grid>\n    )\n  }\n}\n\nexport default AnimateMode\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\n@observer\nclass PlayController extends Component {\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown, false)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false)\n  }\n\n  handleKeyDown = (event) => {\n    const {\n      play,\n      pause,\n      goToNext,\n      goToPrev,\n      goToFirst,\n      goToLast,\n      playing,\n    } = this.props.animation\n    const { key, shiftKey } = event\n\n    if (key === 'ArrowLeft' && shiftKey) {\n      goToFirst()\n    } else if (key === 'ArrowLeft') {\n      goToPrev()\n    } else if (key === 'ArrowRight' && shiftKey) {\n      goToLast()\n    } else if (key === 'ArrowRight') {\n      goToNext()\n    } else if (key === ' ') {\n      event.stopPropagation()\n      event.preventDefault()\n      if (playing === true) {\n        pause()\n      } else {\n        play()\n      }\n    }\n  }\n\n  render() {\n    const {\n      play,\n      pause,\n      goToNext,\n      goToPrev,\n      goToFirst,\n      goToLast,\n      playing,\n    } = this.props.animation\n\n    return (\n      <Grid gridTemplateColumns=\"30% 1fr 1fr 1fr 1fr 1fr 30%\" height=\"60px\" alignItems=\"center\" justifyItems=\"center\" borderTop=\"1px solid rgb(230, 230, 230)\">\n        <GridItem gridColumnStart=\"2\">\n          <button type=\"button\" style={{ margin: 0 }} onClick={goToFirst}>&#8676;</button>\n        </GridItem>\n        <GridItem gridColumnStart=\"3\">\n          <button type=\"button\" style={{ margin: 0 }} onClick={goToPrev}>&#9667;</button>\n        </GridItem>\n        <GridItem gridColumnStart=\"4\">\n          { playing === false\n            ? <button type=\"button\" style={{ margin: 0 }} onClick={play}>&#9658;</button>\n            : <button type=\"button\" style={{ margin: 0 }} onClick={pause}>&#10073; &#10073;</button>\n          }\n        </GridItem>\n        <GridItem gridColumnStart=\"5\">\n          <button type=\"button\" style={{ margin: 0 }} onClick={goToNext}>\n            <div style={{ transform: 'rotate(180deg)' }}>&#9667;</div>\n          </button>\n        </GridItem>\n        <GridItem gridColumnStart=\"6\">\n          <button type=\"button\" style={{ margin: 0 }} onClick={goToLast}>&#8677;</button>\n        </GridItem>\n      </Grid>\n    )\n  }\n}\n\nexport default PlayController\n","import React from 'react'\n\nconst getWidth = () => (\n  window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth\n)\n\nconst getHeight = () => (\n  window.innerHeight\n    || document.documentElement.clientHeight\n    || document.body.clientHeight\n)\n\nconst withWindowSize = Component => (\n  class extends React.Component {\n    state = {\n      width: getWidth(),\n      height: getHeight(),\n    }\n\n    componentDidMount() {\n      window.addEventListener('resize', this.updateDimensions)\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateDimensions)\n    }\n\n    updateDimensions = () => {\n      const width = getWidth()\n      const height = getHeight()\n      this.setState({ width, height })\n    }\n\n    render() {\n      const { width, height } = this.state\n      return <Component width={width} height={height} {...this.props} />\n    }\n  }\n)\n\nexport default withWindowSize\nexport {\n  getWidth,\n  getHeight,\n}\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Viewer from './Viewer'\nimport PlayController from './PlayController'\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\nimport { getWidth } from '../components/withWindowSize'\n\nimport placeholder from '../prototypes/placeholder'\n\n@observer\nclass ViewMode extends Component {\n  componentDidMount() {\n    const { canvas } = this.props.store\n    const width = getWidth() - 20\n    const height = Math.round((9 / 16) * width)\n    canvas.setSize(width, height)\n\n    placeholder.setRange(this.props.store.animation)\n  }\n\n  componentWillUnmount() {\n    const { project } = this.props.store\n    project.clear()\n  }\n\n  setup = () => {\n    const { canvas } = this.props.store\n    canvas.build()\n  }\n\n  render() {\n    const { canvas, animation } = this.props.store\n    return (\n      <Grid\n        gridTemplateRows=\"auto 60px\"\n        alignItems=\"center\"\n      >\n        <GridItem padding=\"10px\">\n          <Viewer canvas={canvas} animation={animation} setup={this.setup} />\n        </GridItem>\n        <PlayController animation={animation} />\n      </Grid>\n    )\n  }\n}\n\nexport default ViewMode\n","var map = {\n\t\"./bare.min.css\": \"v4a6\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"zGb5\";"],"sourceRoot":""}