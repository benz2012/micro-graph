{"version":3,"sources":["webpack:///./src/js/prototypes/items/Rectangle.js","webpack:///./src/js/prototypes/placeholder.js","webpack:///./src/js/prototypes/Project.js","webpack:///./src/js/prototypes/Canvas.js","webpack:///./src/js/prototypes/ModeStore.js","webpack:///./src/js/util/observeAnimatableTree.js","webpack:///./src/js/prototypes/ToolsStore.js","webpack:///./src/js/store.js","webpack:///./src/js/index.jsx","webpack:///./src/js/containers/App.jsx","webpack:///./src/js/components/Playbar.jsx","webpack:///./src/js/containers/Viewer.jsx","webpack:///./src/js/prototypes/items/Circle.js","webpack:///./src/js/components/GridItem.jsx","webpack:///./src/js/prototypes/Handle.js","webpack:///./src/js/prototypes/Animation.js","webpack:///./src/js/components/Grid.jsx","webpack:///./src/css/index.js","webpack:///./src/js/containers/ToolController.jsx","webpack:///./src/js/components/IntegerInput.jsx","webpack:///./src/js/components/Modal.jsx","webpack:///./src/js/containers/PropertyEditor.jsx","webpack:///./src/js/containers/ProjectSettings.jsx","webpack:///./src/js/containers/BuildMode.jsx","webpack:///./src/js/components/Canvas.jsx","webpack:///./src/js/containers/ExportMode.jsx","webpack:///./src/css/bare.min.css","webpack:///./src/js/util/bezierCurve.js","webpack:///./src/js/prototypes/Keyframe.js","webpack:///./src/js/prototypes/AnimatableItem.js","webpack:///./src/js/containers/ModeController.jsx","webpack:///./src/js/prototypes/HandleEditor.js","webpack:///./src/js/containers/HandleEditor.jsx","webpack:///./src/js/containers/KeyframeEditor.jsx","webpack:///./src/js/containers/AnimateMode.jsx","webpack:///./src/js/util/string.js","webpack:///./src/js/containers/PlayController.jsx","webpack:///./src/js/containers/ViewMode.jsx","webpack:///./src/js/components/withWindowSize.jsx","webpack:///./node_modules/file-loader/dist/cjs.js"],"names":["Rectangle","AnimatableItem","itemProps","this","position","x","y","absX","absolute","absY","absWidth","width","absHeight","height","paper","Path","point","size","radius","Math","max","_width","value","recreate","_height","_radius","observable","WIDTH","HEIGHT","RADIUS","Project","rootStore","clear","project","remove","canvas","animation","setSize","undefined","setIn","Animation","FIRST","setOut","frames","setName","name","action","Canvas","attatchTo","id","element","document","getElementById","setup","addListenersAndSelect","animatable","item","on","handleItemMouseDown","select","event","stopPropagation","currentTarget","handleViewMouseDown","deselect","forEachAnimatable","callback","Object","values","animatables","forEach","build","create","draw","frame","frameToDraw","now","view","update","selectOn","selectOff","off","setSizeAction","setTimeout","autoUpdate","background","topLeft","bottomRight","fillColor","color","firstFrame","_color","t","key","tool","clone","nextTool","entering","toolId","prevTool","exiting","mode","settings","selected","Mode","m","current","observeAnimatableTree","observableObj","constructor","OBSERVABLES","map","keys","keyframes","keyFrType","Tools","keyframe","selectedKeyframe","RootStore","ModeStore","tools","ToolsStore","reaction","store","appNode","ReactDOM","render","App","observer","Component","props","set","setTool","minHeight","gridTemplateRows","hot","module","Playbar","fullWidth","totalFrames","inPoint","outPoint","ABSOLUTE_FIRST","playbarWidth","per","marker","head","parseInt","tail","activeHead","activeTail","style","display","playbarStyle","backgroundColor","marginTop","margin","Viewer","canvasHasSize","init","Fragment","hasSize","lastFrame","Circle","center","GridItem","children","Handle","type","influence","distance","_influence","_distance","MAX","newX","newY","nextFrame","later","prevFrame","earlier","setLength","length","f","goToFrame","playing","animateAtRate","pause","requestId","cancelAnimationFrame","func","interval","fps","then","Date","loop","requestAnimationFrame","delta","sync","round","Grid","cssContext","require","ToolController","choose","preventDefault","addCircle","existing","circle","add","addRectangle","rect","padding","onClick","primary","transform","IntegerInput","state","localValue","onChange","setState","target","onBlur","setValue","possibleInt","result","Number","isInteger","handleKeyDown","shiftKey","incrementBy","decrementBy","changeBy","operation","amount","next","a","b","marginRight","textAlign","onKeyDown","Modal","open","handleClose","clickawayEl","useRef","container","contains","ref","body","content","PropertyEditor","propertySetter","property","existingKeyframe","find","addKey","itemClass","scale","rotation","classControls","zIndex","left","top","overflow","border","ProjectSettings","setColor","closeModal","step","flexDirection","BuildMode","ready","clientWidth","gridTemplateColumns","gridArea","alignSelf","testForAvailability","prevProps","ExportMode","alignItems","justifyItems","exports","makeRoot","real","imag","evaluate","A","B","C","D","q0","B1","C2","Q","dQ","bezierCurve","x2","x3","y2","y3","Error","roots","X","b1","c2","evalInfo","q","dq","r","abs","s","sign","sqrt","x0","den","EPSILON","push","quadInfo","X1","Y1","X2","Y2","concat","getCubicRoots","xA","xB","xC","filter","toFixed","is","yA","yB","yC","c","d","Keyframe","handleIn","handleOut","sort","createCurve","k1","k2","interpolate","curve","timeRatio","valueRatio","dimension","fraction","valueForFrame","includes","indexOf","where","before","after","hue","floor","random","saturation","brightness","rotate","valueToKey","k","valueToKeyY","kY","keyframesY","updateKeyframes","setCanvas","sharedProps","onCreate","setUntrackedValues","entries","xKeyframes","yKeyframes","xValue","yValue","activeLayer","_x","_y","_scale","scaleBy","_rotation","rotateBy","_fillColor","Y","SCALE","ROTATION","FILL_COLOR","ModeController","navigate","textContent","toUpperCase","borderBottom","HandleEditor","trueWidth","keyframeBefore","keyframeAfter","onMove","handleBefore","absoluteHandlePosition","handleAfter","PaperScope","topRight","bottomLeft","spacing","STEP","gridline","SymbolDefinition","Line","from","to","strokeColor","strokeWidth","i","offset","place","Point","setVisualCurveHandles","stringStyle","handleBeforeString","handleAfterString","handleMovable","Color","handleStationary","onMouseEnter","cursor","onMouseLeave","onMouseDrag","travelled","subtract","xChange","yChange","xSign","ySign","newPosition","lastSegment","onMouseUp","firstSegment","handlePosition","handleEditor","handleEditorHasSize","buildHandleEditorCanvas","HandleEditorInstance","React","keyframeKey","destroy","KeyframeEditor","previouslyClickedKeyframe","keyframeEditorHasSize","buildKeyframeEditorCanvas","handleKeyframeClick","onSelect","shadowColor","alpha","handleKeyUp","keyframeProp","split","removeKey","rebuild","timelineMath","verticalSpacing","timelineStart","timelineEnd","timelineStep","placementIndex","playheadLine","buildPlayhead","newKeyframeItems","prop","list","propName","placing","PointText","fontSize","timelineHover","timeline","newKeyframeRect","visible","newKeyframePlus","newKeyframeHoverEffect","newKeyframeHide","newKeyClick","onMouseMove","hitTest","stroke","segments","keyframeIndex","keyframeRect","shadowBlur","bringToFront","addEventListener","removeEventListener","playheadTriangle","RegularPolygon","sides","timelineWidth","AnimateMode","heWidth","keSize","changeHandlePosition","handleType","handleSuffix","str","splitStr","toLowerCase","charAt","substring","join","kItem","kProp","kIndexStr","kIndex","auxilaryHandle","targetHandle","container2","clientHeight","smallestLength","min","container3","selectKeyframe","keyframesOfType","PlayController","play","goToNext","goToPrev","goToFirst","goToLast","borderTop","gridColumnStart","ViewMode","window","innerWidth","documentElement","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","resolve"],"mappings":"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","file":"app.b5def533.js","sourcesContent":["import { observable } from 'mobx'\nimport paper from 'paper'\n\nimport AnimatableItem from '../AnimatableItem'\n\nclass Rectangle extends AnimatableItem {\n  // Canvas Size Relative Values (0-100)\n  static get WIDTH() { return 10 }\n  static get HEIGHT() { return 10 }\n  static get RADIUS() { return 0 }\n\n  @observable _width = Rectangle.WIDTH\n  @observable _height = Rectangle.HEIGHT\n  @observable _radius = Rectangle.RADIUS\n\n  get width() { return this._width }\n  get height() { return this._height }\n  get radius() { return this._radius }\n\n  set width(value) {\n    // TODO: update this value using item.bounds and scale\n    this._width = value\n    this.recreate()\n  }\n\n  set height(value) {\n    // TODO: update this value using item.bounds and scale\n    this._height = value\n    this.recreate()\n  }\n\n  set radius(value) {\n    // TODO: update this value using item.bounds and scale\n    this._radius = value\n    this.recreate()\n  }\n\n  onCreate(itemProps) {\n    const { x, y } = this.position\n    const absX = this.absolute(x)\n    const absY = this.absolute(y, 'height')\n    const absWidth = this.absolute(this.width)\n    const absHeight = this.absolute(this.height)\n\n    new paper.Path.Rectangle({\n      ...itemProps,\n      point: [absX - (absWidth / 2), absY - (absHeight / 2)],\n      size: [absWidth, absHeight],\n      radius: (this.radius / 100) * (Math.max(absWidth, absHeight) / 2),\n    })\n  }\n}\n\nexport default Rectangle\n","import Circle from './items/Circle'\nimport Rectangle from './items/Rectangle'\n\nconst setLength = (animation) => {\n  animation.setLength(200)\n}\n\nconst setRange = (animation) => {\n  animation.setIn(60)\n  animation.setOut(140)\n}\n\nconst addItems = (canvas) => {\n  const circle = new Circle({ key: 'circle1' })\n  circle.addKey('x', 60, 25)\n  circle.addKey('y', 60, 25)\n  circle.addKey('x', 90, 75)\n  circle.addKey('y', 90, 50)\n  circle.addKey('scale', 60, 100)\n  circle.addKey('scale', 90, 250)\n  circle.addKey('scale', 100, 250)\n  circle.addKey('scale', 130, 100)\n  canvas.add(circle)\n\n  const rect = new Rectangle({ key: 'rect1' })\n\n  rect.addKey('rotation', 80, 0)\n  rect.addKey('rotation', 140, 360)\n  rect.addKey('scale', 80, 0.001)\n  rect.addKey('scale', 140, 100)\n  canvas.add(rect)\n  rect.width = 20\n  rect.height = 10\n}\n\nexport default {\n  setLength,\n  setRange,\n  addItems,\n}\n","import { observable, action } from 'mobx'\nimport paper from 'paper'\n\nimport Animation from './Animation'\n\nclass Project {\n  constructor(rootStore) {\n    // FIXME: remove reference to rootStore\n    this.rootStore = rootStore\n    this.setName('My Animation')\n  }\n\n  @observable name = ''\n\n  @action setName(name) {\n    this.name = name\n  }\n\n  clear = () => {\n    paper.project.clear()\n    paper.project.remove()\n\n    const { canvas, animation } = this.rootStore\n    canvas.setSize(undefined, undefined)\n    animation.setIn(Animation.FIRST)\n    animation.setOut(animation.frames)\n  }\n\n  // load() {\n  //   // load project file\n  // }\n\n  // save() {\n  //   // save project file\n  // }\n\n  // render() {\n  //   // render canvas animation to frames\n  // }\n}\n\nexport default Project\n","import { observable, action } from 'mobx'\nimport paper from 'paper'\n\nclass Canvas {\n  constructor(rootStore) {\n    this.rootStore = rootStore\n  }\n\n  @observable width\n  @observable height\n  @observable _color = '#000000'\n  @observable background\n  @observable animatables = {}\n  @observable tool\n  @observable selected\n\n  setSize(width, height) {\n    // allows the canvas element one tick to recognize size changes\n    const setSizeAction = action(() => {\n      this.height = height\n      this.width = width\n    })\n    setTimeout(setSizeAction, 1)\n  }\n\n  attatchTo = (id) => {\n    const element = document.getElementById(id)\n    paper.setup(element)\n  }\n\n  init() {\n    paper.view.autoUpdate = false\n    this.background = new paper.Path.Rectangle({\n      topLeft: [0, 0],\n      bottomRight: [paper.view.element.width, paper.view.element.height],\n      fillColor: this.color,\n    })\n    this.draw(this.rootStore.animation.firstFrame)\n  }\n\n  get color() { return this._color }\n  set color(value) {\n    this._color = value\n    this.background.fillColor = value\n  }\n\n  @action add = (animatable) => {\n    animatable.create(this)\n    this.animatables = {\n      ...this.animatables,\n      [animatable.key]: animatable,\n    }\n\n    if (this.tool === 'SELECT') {\n      this.addListenersAndSelect(animatable)\n    }\n\n    this.draw()\n  }\n\n  @action remove = (animatable) => {\n    animatable.item.off('mousedown', this.handleItemMouseDown)\n    animatable.item.remove()\n\n    const clone = { ...this.animatables }\n    delete clone[animatable.key]\n    this.animatables = clone\n    this.draw()\n  }\n\n  @action setTool = (nextTool) => {\n    const prevTool = this.tool\n\n    const entering = toolId => (prevTool !== toolId && nextTool === toolId)\n    const exiting = toolId => (prevTool === toolId && nextTool !== toolId)\n\n    if (entering('SELECT')) { this.selectOn() }\n    if (exiting('SELECT')) { this.selectOff() }\n\n    if (entering('SETTINGS')) { this.rootStore.mode.settings = true }\n    if (exiting('SETTINGS')) { this.rootStore.mode.settings = false }\n\n    // Finally, set the tool in-memory\n    this.tool = nextTool\n  }\n\n  @action select = (item) => {\n    this.deselect()\n    item.selected = true // eslint-disable-line no-param-reassign\n    this.selected = this.animatables[item.name]\n    paper.view.update()\n  }\n\n  @action deselect = () => {\n    if (this.selected) {\n      this.selected.item.selected = false\n      this.selected = undefined\n    }\n    paper.view.update()\n  }\n\n  addListenersAndSelect = (animatable) => {\n    animatable.item.on('mousedown', this.handleItemMouseDown)\n    this.select(animatable.item)\n  }\n\n  handleItemMouseDown = (event) => {\n    event.stopPropagation()\n    this.select(event.currentTarget)\n  }\n\n  handleViewMouseDown = (event) => {\n    event.stopPropagation()\n    this.deselect()\n  }\n\n  forEachAnimatable = callback => (\n    Object.values(this.animatables).forEach(callback)\n  )\n\n  build = () => {\n    this.forEachAnimatable((animatable) => { animatable.create(this) })\n    this.draw()\n  }\n\n  draw = (frame) => {\n    const frameToDraw = frame || this.rootStore.animation.now\n    this.forEachAnimatable((animatable) => { animatable.draw(frameToDraw) })\n    if (paper.view) paper.view.update()\n  }\n\n  selectOn = () => {\n    this.forEachAnimatable((animatable) => {\n      animatable.item.on('mousedown', this.handleItemMouseDown)\n    })\n    paper.view.on('mousedown', this.handleViewMouseDown)\n  }\n\n  selectOff = () => {\n    this.forEachAnimatable((animatable) => {\n      animatable.item.off('mousedown', this.handleItemMouseDown)\n    })\n    paper.view.off('mousedown', this.handleViewMouseDown)\n    this.deselect()\n  }\n}\n\nexport default Canvas\n","import { observable, action } from 'mobx'\n\nclass Mode {\n  @observable current = null\n  @observable settings = false\n\n  @action set = (m) => {\n    this.current = m\n  }\n}\n\nexport default Mode\n","const observeAnimatableTree = (observableObj) => {\n  const observableKeys = observableObj.constructor.OBSERVABLES\n  return observableKeys.map((key) => {\n    if (key === 'keyframes') {\n      return Object.keys(observableObj.keyframes).map(keyFrType => (\n        observableObj.keyframes[keyFrType].map(observeAnimatableTree)\n      ))\n    }\n\n    const value = observableObj[key]\n    if (value.constructor.OBSERVABLES) {\n      return observeAnimatableTree(value)\n    }\n\n    return value\n  })\n}\n\nexport default observeAnimatableTree\n","import { observable, action } from 'mobx'\n\nclass Tools {\n  @observable selectedKeyframe\n\n  @action selectKeyframe = (keyframe) => {\n    this.selectedKeyframe = keyframe\n  }\n}\n\nexport default Tools\n","import { observable, reaction } from 'mobx'\n\nimport Project from './prototypes/Project'\nimport Canvas from './prototypes/Canvas'\nimport Animation from './prototypes/Animation'\nimport ModeStore from './prototypes/ModeStore'\nimport ToolsStore from './prototypes/ToolsStore'\n\nimport observeAnimatableTree from './util/observeAnimatableTree'\n\nclass RootStore {\n  @observable project\n  @observable canvas\n  @observable animation\n  @observable mode\n  @observable tools\n\n  constructor() {\n    this.project = new Project(this)\n    this.canvas = new Canvas(this)\n    this.animation = new Animation()\n    this.mode = new ModeStore()\n    this.tools = new ToolsStore()\n\n    // Reacts to all changes made to animatable item properties and redraws the canvas\n    reaction(\n      () => ([\n        this.animation.now,\n        this.canvas.color,\n        Object.values(this.canvas.animatables).map(observeAnimatableTree),\n      ]),\n      () => this.canvas.draw()\n    )\n  }\n}\n\nexport default RootStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// Root Application Container\nimport App from './containers/App'\nimport RootStore from './store'\n\n// Styles\nimport '../css'\n\nconst store = new RootStore()\nconst appNode = document.getElementById('app')\n\nReactDOM.render(\n  <App store={store} />,\n  appNode\n)\n","import React, { Component } from 'react'\nimport { hot } from 'react-hot-loader'\nimport { observer } from 'mobx-react'\n\nimport ModeController from './ModeController'\nimport BuildMode from './BuildMode'\nimport AnimateMode from './AnimateMode'\nimport ViewMode from './ViewMode'\nimport ExportMode from './ExportMode'\nimport Grid from '../components/Grid'\n\n@observer\nclass App extends Component {\n  componentDidMount() {\n    const { store } = this.props\n    store.mode.set('BUILD')\n    // setTimeout(() => { store.mode.set('ANIMATE') }, 100)\n    store.canvas.setTool('SETTINGS')\n  }\n\n  render() {\n    const { store } = this.props\n    return (\n      <Grid\n        minHeight=\"100vh\"\n        gridTemplateRows=\"60px 1fr\"\n      >\n        <ModeController mode={store.mode} />\n        {store.mode.current === 'BUILD' &&\n          <BuildMode store={store} />\n        }\n        {store.mode.current === 'ANIMATE' &&\n          <AnimateMode store={store} />\n        }\n        {store.mode.current === 'VIEW' &&\n          <ViewMode store={store} />\n        }\n        {store.mode.current === 'EXPORT' &&\n          <ExportMode store={store} />\n        }\n      </Grid>\n    )\n  }\n}\n\nexport default hot(module)(App)\n","import React from 'react'\n\nconst playbarStyle = { height: '10px', margin: '10px 0px' }\n\nconst Playbar = ({\n  fullWidth,\n  totalFrames,\n  inPoint,\n  outPoint,\n  now,\n  ABSOLUTE_FIRST,\n}) => {\n  const playbarWidth = fullWidth || 0\n\n  const per = playbarWidth / totalFrames\n  const marker = totalFrames > 1 ? per : 0\n  const head = parseInt((inPoint - ABSOLUTE_FIRST) * per)\n  const tail = parseInt((totalFrames - outPoint) * per)\n\n  let activeHead = parseInt((now * per) - head)\n  if (totalFrames === 1) {\n    activeHead = per\n  } else if (now === inPoint) {\n    activeHead = 0\n  } else if (now === outPoint) {\n    activeHead = playbarWidth - head - tail - marker\n  }\n  const activeTail = now === outPoint ? 0 : playbarWidth - head - tail - activeHead - marker\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{\n        ...playbarStyle,\n        width: head,\n        backgroundColor: 'rgb(150, 160, 170)' }}\n      />\n      <div style={{\n        ...playbarStyle,\n        width: activeHead,\n        backgroundColor: 'rgb(220, 225, 240)' }}\n      />\n      <div style={{\n        ...playbarStyle,\n        width: marker,\n        height: '20px',\n        marginTop: '5px',\n        backgroundColor: 'rgb(30, 155, 255)' }}\n      />\n      <div style={{\n        ...playbarStyle,\n        width: activeTail,\n        backgroundColor: 'rgb(220, 225, 240)' }}\n      />\n      <div style={{\n        ...playbarStyle,\n        width: tail,\n        backgroundColor: 'rgb(150, 160, 170)' }}\n      />\n    </div>\n  )\n}\n\nexport default Playbar\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Animation from '../prototypes/Animation'\nimport Canvas from '../components/Canvas'\nimport Playbar from '../components/Playbar'\n\n@observer\nclass Viewer extends Component {\n  canvasHasSize = () => {\n    const { canvas, setup } = this.props\n    canvas.attatchTo('paper-canvas')\n    canvas.init()\n    setup()\n  }\n\n  render() {\n    const { canvas, animation } = this.props\n    return (\n      <React.Fragment>\n        <Canvas\n          id=\"paper-canvas\"\n          width={canvas.width}\n          height={canvas.height}\n          hasSize={this.canvasHasSize}\n        />\n        <Playbar\n          fullWidth={canvas.width}\n          totalFrames={animation.frames}\n          inPoint={animation.firstFrame}\n          outPoint={animation.lastFrame}\n          now={animation.now}\n          ABSOLUTE_FIRST={Animation.FIRST}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Viewer\n","import { observable } from 'mobx'\nimport paper from 'paper'\n\nimport AnimatableItem from '../AnimatableItem'\n\nclass Circle extends AnimatableItem {\n  // Canvas Size Relative Values (0-100)\n  static get RADIUS() { return 10 }\n\n  @observable _radius = Circle.RADIUS\n\n  get radius() { return this._radius }\n  set radius(value) {\n    // TODO: update this value using item.bounds and scale\n    this._radius = value\n    this.recreate()\n  }\n\n  onCreate(itemProps) {\n    const { x, y } = this.position\n    new paper.Path.Circle({\n      ...itemProps,\n      center: [this.absolute(x), this.absolute(y, 'height')],\n      radius: this.absolute(this.radius) / 2,\n    })\n  }\n}\n\nexport default Circle\n","import React from 'react'\n\nconst GridItem = ({ id, children, ...style }) => (\n  <div id={id} style={style}>\n    {children}\n  </div>\n)\n\nexport default GridItem\n","import { observable } from 'mobx'\n\nclass Handle {\n  static get MAX() { return 100 }\n  static get STEP() { return 10 }\n  static get OBSERVABLES() {\n    return ['influence', 'distance']\n  }\n\n  @observable _influence\n  @observable _distance\n\n  constructor(type) {\n    this.type = type\n    this.influence = 50\n    this.distance = 0\n  }\n\n  get influence() { return this._influence }\n  get distance() { return this._distance }\n  get position() {\n    let x = this.influence\n    let y = this.distance\n    if (this.type === 'IN') {\n      x = Handle.MAX - this.influence\n      y = Handle.MAX - this.distance\n    }\n    x /= Handle.MAX\n    y /= Handle.MAX\n    return { x, y }\n  }\n\n  set influence(value) {\n    this._influence = value\n  }\n\n  set distance(value) {\n    this._distance = value\n  }\n\n  set position({ x, y }) {\n    const newX = x * Handle.MAX\n    const newY = x * Handle.MAX\n    if (this.type === 'IN') {\n      this.influence = Handle.MAX - newX\n      this.distance = Handle.MAX - newY\n    } else {\n      this.influence = newX\n      this.distance = newY\n    }\n  }\n}\n\nexport default Handle\n","import { observable, action } from 'mobx'\n\nclass Animation {\n  static get FIRST() { return 1 }\n  static get PLAYBACK_MODES() { return ['LOOP', 'ONCE'] }\n\n  constructor() {\n    this.setLength(100)\n  }\n\n  @observable frames = 1\n  @observable firstFrame = Animation.FIRST\n  @observable lastFrame = 1\n  @observable fps = 30\n  @observable now = this.firstFrame\n  @observable playing = false\n  @observable sync = 0\n  @observable requestId = null\n  @observable mode = 'LOOP'\n\n  @action setLength(length) {\n    this.frames = length\n    if (length < this.lastFrame) {\n      this.lastFrame = length\n    }\n  }\n\n  @action setIn = (f) => {\n    if (f < Animation.FIRST || f > this.frames) return\n    this.firstFrame = f\n    if (this.now < f) {\n      this.goToFrame(f)\n    }\n  }\n\n  @action setOut = (f) => {\n    if (f < Animation.FIRST || f > this.frames) return\n    this.lastFrame = f\n    if (this.now > f) {\n      this.goToFrame(f)\n    }\n  }\n\n  nextFrame = () => {\n    const later = this.now + 1\n    if (later > this.lastFrame) {\n      if (this.mode === 'LOOP') return this.firstFrame\n      return null\n    }\n    return later\n  }\n\n  prevFrame = () => {\n    const earlier = this.now - 1\n    if (earlier < this.firstFrame) {\n      if (this.mode === 'LOOP') return this.lastFrame\n      return null\n    }\n    return earlier\n  }\n\n  @action play = () => {\n    if (this.nextFrame() === null) return\n    this.playing = true\n    this.animateAtRate(() => {\n      const nextFrame = this.nextFrame()\n      if (nextFrame === null) return this.pause()\n      this.now = nextFrame\n    })\n  }\n\n  @action pause = () => {\n    this.playing = false\n    if (this.requestId) cancelAnimationFrame(this.requestId)\n  }\n\n  @action goToFrame = (frame) => {\n    this.now = frame\n  }\n\n  @action goToFirst = () => {\n    this.goToFrame(this.firstFrame)\n  }\n\n  @action goToLast = () => {\n    this.goToFrame(this.lastFrame)\n  }\n\n  @action goToNext = () => {\n    const nextFrame = this.nextFrame()\n    if (nextFrame === null) return\n    this.goToFrame(nextFrame)\n  }\n\n  @action goToPrev = () => {\n    const prevFrame = this.prevFrame()\n    if (prevFrame === null) return\n    this.goToFrame(prevFrame)\n  }\n\n  @action animateAtRate = (func) => {\n    const interval = 1000 / this.fps\n    let then = Date.now()\n\n    const loop = () => {\n      if (this.playing === false) return\n      this.requestId = requestAnimationFrame(loop)\n      const now = Date.now()\n      const delta = now - then\n      if (delta >= interval) {\n        then = now - (delta % interval)\n        this.sync = Math.round(delta - interval - (delta % interval))\n        func()\n      }\n    }\n    loop()\n  }\n}\n\nexport default Animation\n","import React from 'react'\n\nconst Grid = ({ children, ...style }) => (\n  <div style={{ display: 'grid', ...style }}>\n    {children}\n  </div>\n)\n\nexport default Grid\n","const cssContext = require.context(\n  '!!file-loader?name=[name].[ext]!.',\n  true,\n  /\\.(css)$/\n)\n\ncssContext.keys().forEach(cssContext)\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Circle from '../prototypes/items/Circle'\nimport Rectangle from '../prototypes/items/Rectangle'\n\n@observer\nclass ToolController extends Component {\n  choose = (event) => {\n    event.preventDefault()\n    this.props.setTool(event.currentTarget.id)\n  }\n\n  addCircle = () => {\n    const { existing } = this.props\n    const circle = new Circle({\n      key: `circle-${Object.keys(existing).length}`,\n    })\n    this.props.add(circle)\n  }\n\n  addRectangle = () => {\n    const { existing } = this.props\n    const rect = new Rectangle({\n      key: `rect-${Object.keys(existing).length}`,\n    })\n    this.props.add(rect)\n  }\n\n  render() {\n    const { tool } = this.props\n\n    return (\n      <div style={{ display: 'flex', padding: '10px 10px 0px 10px' }}>\n        <button\n          type=\"button\"\n          id=\"SETTINGS\"\n          onClick={this.choose}\n          {...(tool === 'SETTINGS' ? { primary: 'true' } : {})}\n        >\n          <div>*</div>\n        </button>\n        <button\n          type=\"button\"\n          id=\"SELECT\"\n          onClick={this.choose}\n          {...(tool === 'SELECT' ? { primary: 'true' } : {})}\n        >\n          <div style={{ transform: 'rotate(-135deg)' }}>&#10148;</div>\n        </button>\n        {/* <button\n          type=\"button\"\n          id=\"DRAW\"\n          onClick={this.choose}\n          {...(tool === 'DRAW' ? { primary: 'true' } : {})}\n        >\n          ✎\n        </button> */}\n\n        <button type=\"button\" onClick={this.addCircle}>+ Circle</button>\n        <button type=\"button\" onClick={this.addRectangle}>+ Rectangle</button>\n      </div>\n    )\n  }\n}\n\nexport default ToolController\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\n@observer\nclass IntegerInput extends Component {\n  state = {\n    localValue: 0,\n  }\n\n  componentDidMount() {\n    const { value } = this.props\n    if (value !== this.state.localValue) {\n      this.setState({ localValue: value })\n    }\n  }\n\n  onChange = (event) => {\n    this.setState({ localValue: event.target.value })\n  }\n\n  onBlur = () => {\n    const { value, setValue } = this.props\n    const { localValue } = this.state\n\n    const possibleInt = parseInt(localValue)\n    let result = value\n    if (Number.isInteger(possibleInt)) {\n      result = possibleInt\n    }\n\n    setValue(result)\n    this.setState({ localValue: result })\n  }\n\n  handleKeyDown = (event) => {\n    const { key, shiftKey } = event\n    if (key === 'ArrowUp' && shiftKey) {\n      this.incrementBy(10)\n    } else if (key === 'ArrowUp') {\n      this.incrementBy(1)\n    } else if (key === 'ArrowDown' && shiftKey) {\n      this.decrementBy(10)\n    } else if (key === 'ArrowDown') {\n      this.decrementBy(1)\n    }\n  }\n\n  changeBy = operation => (amount) => {\n    const { value, setValue } = this.props\n    const next = operation(value, amount)\n    setValue(next)\n    this.setState({ localValue: next })\n  }\n\n  // eslint-disable-next-line\n  incrementBy = this.changeBy((a, b) => a + b)\n  decrementBy = this.changeBy((a, b) => a - b)\n\n  render() {\n    const { localValue } = this.state\n    return (\n      <input\n        type=\"text\"\n        style={{ width: '60px', marginRight: '20px', textAlign: 'center' }}\n        value={localValue}\n        onChange={this.onChange}\n        onKeyDown={this.handleKeyDown}\n        onBlur={this.onBlur}\n      />\n    )\n  }\n}\n\nexport default IntegerInput\n","import React, { useRef } from 'react'\n\nconst style = {\n  container: {\n    position: 'fixed',\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    overflow: 'auto',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n  },\n  body: {\n    backgroundColor: '#fefefe',\n    margin: '15% auto',\n    border: '1px solid #888',\n    width: '80%',\n  },\n  content: {\n    padding: '16px',\n  },\n}\n\nconst Modal = ({ children, open, handleClose }) => {\n  const clickawayEl = useRef(null)\n\n  const onClickaway = (event) => {\n    if (clickawayEl.current.contains(event.target)) return\n    handleClose()\n  }\n\n  return (\n    open === false ? null : (\n      <div style={style.container} onClick={onClickaway}>\n        <div ref={clickawayEl} style={style.body}>\n          <div style={style.content}>{children}</div>\n        </div>\n      </div>\n    )\n  )\n}\n\nexport default Modal\n","// encapsulates ValueEditor, implements editing the paper properties of an AnimatibleItem\n\nimport React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport IntegerInput from '../components/IntegerInput'\n\n@observer\nclass PropertyEditor extends Component {\n  propertySetter = property => (value) => {\n    const { item, now } = this.props\n\n    if (item.keyframes[property].length) {\n      const existingKeyframe = item.keyframes[property].find(keyframe => keyframe.frame === now)\n      if (existingKeyframe) {\n        existingKeyframe.value = value\n      } else {\n        item.addKey(`${property}`, now, value)\n      }\n    } else {\n      item[property] = value\n    }\n  }\n\n  classControls() {\n    const { item } = this.props\n    const itemClass = item.constructor.name\n\n    if (itemClass === 'Circle') {\n      return (\n        <React.Fragment>\n          <label>Radius</label>\n          <div style={{ display: 'flex' }}>\n            <IntegerInput value={item.radius} setValue={this.propertySetter('radius')} />\n          </div>\n        </React.Fragment>\n      )\n    }\n\n    if (itemClass === 'Rectangle') {\n      return (\n        <React.Fragment>\n          <label>Size</label>\n          <div style={{ display: 'flex' }}>\n            <IntegerInput value={item.width} setValue={this.propertySetter('width')} />\n            <IntegerInput value={item.height} setValue={this.propertySetter('height')} />\n          </div>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { item } = this.props\n\n    if (item === undefined) {\n      return (\n        <h3 style={{ padding: '10px', color: 'darkgray' }}>\n          Select an Item on the Canvas.\n        </h3>\n      )\n    }\n\n    return (\n      <div style={{ padding: '10px' }}>\n        <h4>{item.key}</h4>\n        <label>Position</label>\n        <div style={{ display: 'flex' }}>\n          <IntegerInput value={item.x} setValue={this.propertySetter('x')} />\n          <IntegerInput value={item.y} setValue={this.propertySetter('y')} />\n        </div>\n\n        <label>Scale</label>\n        <div style={{ display: 'flex' }}>\n          <IntegerInput value={item.scale} setValue={this.propertySetter('scale')} />\n        </div>\n\n        <label>Rotation</label>\n        <div style={{ display: 'flex' }}>\n          <IntegerInput value={item.rotation} setValue={this.propertySetter('rotation')} />\n        </div>\n\n        {this.classControls()}\n      </div>\n    )\n  }\n}\n\nexport default PropertyEditor\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Modal from '../components/Modal'\n\n@observer\nclass ProjectSettings extends Component {\n  setName = (event) => {\n    const { store } = this.props\n    store.project.setName(event.target.value)\n  }\n\n  setLength = (event) => {\n    const { store } = this.props\n    const length = parseInt(event.target.value)\n    store.animation.setLength(length)\n  }\n\n  setColor = (event) => {\n    const { store } = this.props\n    store.canvas.color = event.target.value\n  }\n\n  closeModal = () => this.props.store.canvas.setTool('SELECT')\n\n  render() {\n    const { store } = this.props\n\n    return (\n      <Modal open={store.mode.settings} handleClose={this.closeModal}>\n        <h3>Project Settings</h3>\n\n        <label>Project Name</label>\n        <input type=\"text\" value={store.project.name} onChange={this.setName} />\n\n        <label>Animation Length</label>\n        <input type=\"number\" step=\"1\" value={store.animation.frames} onChange={this.setLength} />\n\n        <label>Canvas Background</label>\n        <select value={store.canvas.color} onChange={this.setColor}>\n          <option value=\"#000000\">Black</option>\n          <option value=\"#ffffff\">White</option>\n        </select>\n\n        <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n          <button type=\"button\" onClick={this.closeModal}>Close</button>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nexport default ProjectSettings\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Viewer from './Viewer'\nimport ToolController from './ToolController'\nimport PropertyEditor from './PropertyEditor'\nimport ProjectSettings from './ProjectSettings'\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\nimport placeholder from '../prototypes/placeholder'\n\n@observer\nclass BuildMode extends Component {\n  state = {\n    ready: false,\n  }\n\n  componentDidMount() {\n    const { canvas } = this.props.store\n    const container = document.getElementById('build-container')\n    setTimeout(() => {\n      const width = Math.round(container.clientWidth) - 20\n      const height = Math.round((9 / 16) * width)\n      canvas.setSize(width, height)\n    }, 1)\n\n    if (canvas.tool === 'SELECT') {\n      setTimeout(() => {\n        canvas.setTool(undefined)\n        canvas.setTool('SELECT')\n      }, 20)\n    }\n  }\n\n  componentWillUnmount() {\n    const { project, canvas } = this.props.store\n    canvas.selectOff()\n    project.clear()\n  }\n\n  setup = () => {\n    this.setState({ ready: true })\n    const { canvas } = this.props.store\n    canvas.build()\n\n    // placeholder.setLength(this.props.store.animation)\n    // placeholder.setRange(this.props.store.animation)\n    // if (Object.keys(canvas.animatables).length === 0) {\n    //   placeholder.addItems(canvas)\n    // }\n  }\n\n  add = (item) => {\n    const { canvas } = this.props.store\n    canvas.add(item)\n  }\n\n  render() {\n    const { canvas, animation } = this.props.store\n    const { ready } = this.state\n    return (\n      <React.Fragment>\n        <ProjectSettings store={this.props.store} />\n        <Grid\n          gridTemplateRows=\"auto 60px\"\n          gridTemplateColumns=\"auto 340px\"\n        >\n          <GridItem gridArea=\"1 / 1 / 1 / 2\" id=\"build-container\" padding=\"10px\" alignSelf=\"center\">\n            <Viewer canvas={canvas} animation={animation} setup={this.setup} />\n          </GridItem>\n          <GridItem gridArea=\"1 / 2 / 1 / 3\" backgroundColor=\"rgb(210, 210, 210)\">\n            { canvas && (\n              <PropertyEditor item={canvas.selected} now={animation.now} />\n            )}\n          </GridItem>\n          <GridItem gridArea=\"2 / 1 / 2 / 3\" backgroundColor=\"rgb(180, 180, 180)\">\n            { ready && (\n              <ToolController\n                existing={canvas.animatables}\n                add={this.add}\n                tool={canvas.tool}\n                setTool={canvas.setTool}\n              />\n            )}\n          </GridItem>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default BuildMode\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\n@observer\nclass Canvas extends Component {\n  componentDidMount() {\n    this.testForAvailability()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.width === undefined) {\n      this.testForAvailability()\n    }\n  }\n\n  testForAvailability() {\n    const { width, hasSize } = this.props\n    if (width !== undefined) {\n      hasSize()\n    }\n  }\n\n  render() {\n    const { id, width, height } = this.props\n    if (width === undefined) return null\n    return (\n      <canvas\n        style={{ display: 'block' }}\n        id={id}\n        width={width}\n        height={height}\n      />\n    )\n  }\n}\n\nexport default Canvas\n","/* encapsulates Mode, implements:\n\n  | Viewer     | ExportEditor   |\n  |            |                |\n   ------------|                |\n  | Format     |                |\n  | Controller |                |\n\n*/\n\nimport React, { Component } from 'react'\n\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\nclass ExportMode extends Component {\n  render() {\n    return (\n      <Grid\n        gridTemplateRows=\"auto\"\n        gridTemplateColumns=\"auto\"\n        alignItems=\"center\"\n        justifyItems=\"center\"\n      >\n        <GridItem padding=\"10px\">\n          <h3 style={{ padding: '10px', color: 'darkgray' }}>\n            Feature under construction.\n          </h3>\n        </GridItem>\n      </Grid>\n    )\n  }\n}\n\nexport default ExportMode\n","module.exports = __webpack_public_path__ + \"bare.min.css\";","const makeRoot = (real, imag) => ({ real, imag })\n\nconst evaluate = (x, A, B, C, D) => {\n  const q0 = A * x\n  const B1 = q0 + B\n  const C2 = B1 * x + C\n  return {\n    Q: C2 * x + D,\n    dQ: (q0 + B1) * x + C2,\n    B1,\n    C2,\n  }\n}\n\nconst qdrtc = (A, B, C) => {\n  const b = -B / 2\n  const q = b * b - A * C\n  let X1 = 0\n  let Y1 = 0\n  let X2 = 0\n  let Y2 = 0\n\n  if (q < 0) {\n    const X = b / A\n    const Y = Math.sqrt(-q) / A\n    X1 = X\n    Y1 = Y\n    X2 = X\n    Y2 = -Y\n  } else {\n    Y1 = 0\n    Y2 = 0\n    const r = b + Math.sign(b) * Math.sqrt(q)\n    if (r === 0) {\n      X1 = C / A\n      X2 = -C / A\n    } else {\n      X1 = C / r\n      X2 = r / A\n    }\n  }\n  return [\n    makeRoot(X1, Y1),\n    makeRoot(X2, Y2),\n  ]\n}\n\nconst getCubicRoots = (A, B, C, D) => {\n  let X\n  let a\n  let b1\n  let c2\n  if (A === 0) {\n    X = undefined\n    a = B\n    b1 = C\n    c2 = D\n  } else if (D === 0) {\n    X = 0\n    a = A\n    b1 = B\n    c2 = C\n  } else {\n    a = A\n    X = -(B / A) / 3\n    let evalInfo = evaluate(X, A, B, C, D)\n    let q = evalInfo.Q\n    let dq = evalInfo.dQ\n    b1 = evalInfo.B1\n    c2 = evalInfo.C2\n\n    let t = q / A\n    let r = Math.abs(t) ** (1 / 3)\n    const s = Math.sign(t)\n    t = -dq / A\n    if (t > 0) {\n      r = 1.324717957244746 * Math.max(r, Math.sqrt(t))\n    }\n    let x0 = X - s * r\n    if (x0 !== X) {\n      const den = 1 + (100 * Number.EPSILON)\n      do {\n        X = x0\n        evalInfo = evaluate(X, A, B, C, D)\n        q = evalInfo.Q\n        dq = evalInfo.dQ\n        b1 = evalInfo.B1\n        c2 = evalInfo.C2\n        x0 = (dq === 0 ? X : X - (q / dq) / den)\n      } while (s * x0 > s * X)\n      if (Math.abs(A) * X * X > Math.abs(D / X)) {\n        c2 = -D / X\n        b1 = (c2 - C) / X\n      }\n    }\n  }\n  const roots = []\n  if (X !== undefined) {\n    roots.push(makeRoot(X, 0))\n  }\n  const quadInfo = qdrtc(a, b1, c2)\n  return roots.concat(quadInfo)\n}\n\nconst cubic = (x, a, b, c, d) => (\n  (a * (x ** 3)) + (b * (x ** 2)) + (c * x) + d\n)\n\nconst bezierCurve = ({ x2, x3, y2, y3 }) => {\n  /* x2, and x3 are the X values from the 2nd and 3rd points for a bezier\n      definition. For this use case, they must be between 0 - 1.\n  */\n  if (x2 > 1 || x2 < 0 || x3 > 1 || x3 < 0) {\n    throw Error('This bezier curve requires control values between 0 & 1')\n  }\n\n  // These constants were reduced from the Cubic Bézier curve definition, with\n  // values of (0, 0) and (1, 1) used for p1 & p4 respectively\n  const xA = 3 * x2 - 3 * x3 + 1\n  const xB = -1 * 6 * x2 + 3 * x3\n  const xC = 3 * x2\n\n  const yA = 3 * y2 - 3 * y3 + 1\n  const yB = -1 * 6 * y2 + 3 * y3\n  const yC = 3 * y2\n  const yD = 0\n\n  const t = (x) => {\n    const xD = -x\n    const roots = getCubicRoots(xA, xB, xC, xD)\n    roots.filter(r => (\n      r.imag === 0 &&\n      r.real.toFixed(10) >= 0 &&\n      r.real.toFixed(10) <= 1 &&\n      !Object.is(r.real, -0)\n    ))\n    // console.log(JSON.stringify(roots))\n    return roots[0].real\n  }\n\n  const y = (x) => {\n    const time = t(x)\n    return cubic(time, yA, yB, yC, yD)\n  }\n\n  return ({ t, y })\n}\n\nexport default bezierCurve\n","import { observable } from 'mobx'\n\nimport Handle from './Handle'\nimport bezierCurve from '../util/bezierCurve'\n\nclass Keyframe {\n  static get OBSERVABLES() {\n    return ['frame', 'value', 'handleIn', 'handleOut']\n  }\n\n  @observable frame\n  @observable value\n  @observable handleIn\n  @observable handleOut\n\n  constructor(frame, value) {\n    this.frame = frame\n    this.value = value\n    this.handleIn = new Handle('IN')\n    this.handleOut = new Handle('OUT')\n  }\n\n  static sort = (a, b) => (a.frame - b.frame)\n\n  static createCurve = (k1, k2) => (\n    bezierCurve({\n      x2: k1.handleOut.position.x,\n      y2: k1.handleOut.position.y,\n      x3: k2.handleIn.position.x,\n      y3: k2.handleIn.position.y,\n    })\n  )\n\n  static interpolate = (k1, k2, frame) => {\n    const curve = Keyframe.createCurve(k1, k2)\n    const timeRatio = (frame - k1.frame) / (k2.frame - k1.frame)\n    // BUG: Bezier Interpolation is broken for certain ranges\n    const valueRatio = curve.y(timeRatio)\n    const interpolated = ((k2.value - k1.value) * valueRatio) + k1.value\n    return interpolated\n  }\n}\n\nexport default Keyframe\n","import { observable, action } from 'mobx'\nimport paper from 'paper'\n\nimport Keyframe from './Keyframe'\n\nclass AnimatableItem {\n  // Canvas Size Relative Values (0-100)\n  static get X() { return 50 }\n  static get Y() { return 50 }\n\n  // Absolute Values\n  static get SCALE() { return 100 }\n  static get ROTATION() { return 0 }\n  static get FILL_COLOR() {\n    return {\n      hue: Math.floor(Math.random() * 361),\n      saturation: 0.4,\n      brightness: 1,\n    }\n  }\n\n  static get OBSERVABLES() {\n    return ['x', 'y', 'scale', 'rotation', 'fillColor', 'keyframes']\n  }\n\n  constructor({ key }) {\n    this.key = key\n  }\n\n  @observable canvas\n  @observable _x = AnimatableItem.X\n  @observable _y = AnimatableItem.Y\n  @observable _scale = AnimatableItem.SCALE\n  @observable _rotation = AnimatableItem.ROTATION\n  @observable _fillColor = AnimatableItem.FILL_COLOR\n  @observable keyframes = {\n    x: observable([]),\n    y: observable([]),\n    scale: observable([]),\n    rotation: observable([]),\n  }\n\n  get item() { return paper.project.activeLayer.children[this.key] }\n  get x() { return this._x }\n  get y() { return this._y }\n  get position() { return { x: this.x, y: this.y } }\n  get scale() { return this._scale }\n  get rotation() { return this._rotation }\n  get fillColor() { return this._fillColor }\n\n  set x(value) {\n    this.item.position.x = this.absolute(value)\n    this._x = value\n  }\n\n  set y(value) {\n    this.item.position.y = this.absolute(value, 'height')\n    this._y = value\n  }\n\n  set position({ x, y }) {\n    this.x = x\n    this.y = y\n  }\n\n  set scale(value) {\n    if (this.scale === 0 && value !== 0) {\n      this.item.remove()\n      this.create(this.canvas)\n      this.item.scale(this.fraction(value))\n    } else {\n      const scaleBy = value / this.scale\n      this.item.scale(scaleBy)\n    }\n    this._scale = value\n  }\n\n  set rotation(value) {\n    const rotateBy = value - this.rotation\n    this.item.rotate(rotateBy)\n    this._rotation = value\n  }\n\n  set fillColor(value) {\n    this.item.fillColor = value\n    this._fillColor = value\n  }\n\n  @action setCanvas(canvas) {\n    this.canvas = canvas\n  }\n\n  @action setUntrackedValues() {\n    this.item.scale(this.fraction(this.scale))\n    this.item.rotate(this.rotation)\n  }\n\n  @action updateKeyframes(property, keyframes) {\n    this.keyframes = {\n      ...this.keyframes,\n      [property]: keyframes,\n    }\n  }\n\n  addKey(property, frame, value = undefined) {\n    const valueToKey = value || this[property]\n    const k = new Keyframe(frame, valueToKey)\n    const keyframes = [...this.keyframes[property], k]\n    keyframes.sort(Keyframe.sort)\n\n    if (value === undefined && property === 'x') {\n      const valueToKeyY = this.y\n      const kY = new Keyframe(frame, valueToKeyY)\n      const keyframesY = [...this.keyframes.y, kY]\n      keyframesY.sort(Keyframe.sort)\n      this.keyframes = {\n        ...this.keyframes,\n        x: keyframes,\n        y: keyframesY,\n      }\n    } else {\n      this.updateKeyframes(property, keyframes)\n    }\n  }\n\n  removeKey(property, frame) {\n    let keyframes = [...this.keyframes[property]]\n    keyframes = keyframes.filter(k => k.frame !== frame)\n\n    if (property === 'x') {\n      let keyframesY = [...this.keyframes.y]\n      keyframesY = keyframesY.filter(k => k.frame !== frame)\n      this.keyframes = {\n        ...this.keyframes,\n        x: keyframes,\n        y: keyframesY,\n      }\n    } else {\n      this.updateKeyframes(property, keyframes)\n    }\n  }\n\n  absolute = (value, dimension = 'width') => (\n    value / 100 * this.canvas[dimension]\n  )\n\n  fraction = value => (\n    value / 100\n  )\n\n  create(canvas) {\n    if (this.canvas === undefined) this.setCanvas(canvas)\n\n    const sharedProps = {\n      name: this.key,\n      fillColor: this.fillColor,\n    }\n\n    if (typeof this.onCreate === 'function') {\n      this.onCreate(sharedProps)\n    }\n\n    if (this.item !== undefined) this.setUntrackedValues()\n  }\n\n  recreate() {\n    this.item.remove()\n    this.create(this.canvas)\n    this.canvas.addListenersAndSelect(this)\n  }\n\n  draw(frame) {\n    if (this.item === undefined) return\n\n    Object.entries(this.keyframes).forEach(([property, keyframes]) => {\n      // Ignore `y` property\n      if (property === 'y') return\n      if (property === 'x') {\n        // Interpret `x` & `y` at the same time\n        const xKeyframes = keyframes\n        const yKeyframes = this.keyframes.y\n        if (xKeyframes.length === 0 && yKeyframes.length === 0) return\n        const xValue = this.valueForFrame(frame, xKeyframes)\n        const yValue = this.valueForFrame(frame, yKeyframes)\n        this.position = { x: xValue, y: yValue }\n      } else {\n        // Interpret all other properties individually\n        if (keyframes.length === 0) return\n        const value = this.valueForFrame(frame, keyframes)\n        this[property] = value\n      }\n    })\n  }\n\n  valueForFrame = (frame, keyframes) => {\n    const frames = keyframes.map(key => key.frame)\n\n    // is frame a keyframe\n    if (frames.includes(frame)) {\n      const where = frames.indexOf(frame)\n      return keyframes[where].value\n    }\n\n    // where is frame with respect to keyframes\n    frames.push(frame)\n    frames.sort((a, b) => a - b)\n    const where = frames.indexOf(frame)\n\n    // is frame before or after last key\n    if (where === 0) return keyframes[0].value\n    if (where === frames.length - 1) return keyframes[keyframes.length - 1].value\n\n    // frame is between two keys\n    const before = keyframes[where - 1]\n    const after = keyframes[where]\n    return Keyframe.interpolate(before, after, frame)\n  }\n}\n\nexport default AnimatableItem\n","import React, { Component } from 'react'\n\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\nclass ModeController extends Component {\n  navigate = (event) => {\n    event.preventDefault()\n    const { mode } = this.props\n    mode.set(event.target.textContent.toUpperCase())\n  }\n\n  render() {\n    const { current } = this.props.mode\n    return (\n      <Grid gridTemplateColumns=\"1fr 1fr 1fr 1fr\" borderBottom=\"1px solid rgb(230, 230, 230)\">\n        <GridItem display=\"grid\" alignItems=\"center\" justifyItems=\"center\">\n          <button\n            type=\"button\"\n            style={{ margin: '0px' }}\n            onClick={this.navigate}\n            {...(current === 'BUILD' ? { primary: 'true' } : {})}\n          >\n            Build\n          </button>\n        </GridItem>\n        <GridItem display=\"grid\" alignItems=\"center\" justifyItems=\"center\">\n          <button\n            type=\"button\"\n            style={{ margin: '0px' }}\n            onClick={this.navigate}\n            {...(current === 'ANIMATE' ? { primary: 'true' } : {})}\n          >\n            Animate\n          </button>\n        </GridItem>\n        <GridItem display=\"grid\" alignItems=\"center\" justifyItems=\"center\">\n          <button\n            type=\"button\"\n            style={{ margin: '0px' }}\n            onClick={this.navigate}\n            {...(current === 'VIEW' ? { primary: 'true' } : {})}\n          >\n            View\n          </button>\n        </GridItem>\n        <GridItem display=\"grid\" alignItems=\"center\" justifyItems=\"center\">\n          <button\n            type=\"button\"\n            style={{ margin: '0px' }}\n            onClick={this.navigate}\n            {...(current === 'EXPORT' ? { primary: 'true' } : {})}\n          >\n            Export\n          </button>\n        </GridItem>\n      </Grid>\n    )\n  }\n}\n\nexport default ModeController\n","import paper from 'paper'\n\nimport Handle from './Handle'\n\nclass HandleEditor {\n  constructor(trueWidth, keyframeBefore, keyframeAfter, onMove) {\n    this.trueWidth = trueWidth\n    this.keyframeBefore = keyframeBefore\n    this.keyframeAfter = keyframeAfter\n    this.onMove = onMove\n    this.paper = new paper.PaperScope()\n\n    this.element = undefined\n  }\n\n  attatchTo = (id) => {\n    const element = document.getElementById(id)\n    this.element = element\n    this.paper.setup(element)\n  }\n\n  destroy() {\n    if (this.paper.project) {\n      this.paper.project.clear()\n      this.paper.project.remove()\n    }\n  }\n\n  init() {\n    // Assumes Width & Height are identical\n    this.padding = 10\n    this.width = this.trueWidth - (this.padding * 2)\n    const { width, padding } = this\n\n    const topLeft = [padding, padding]\n    const topRight = [width + padding, padding]\n    const bottomLeft = [padding, width + padding]\n    // const bottomRight = [width, width + padding]\n    const spacing = width / Handle.STEP\n    const center = this.trueWidth / 2\n\n    // Background\n    new this.paper.Path.Rectangle({\n      topLeft: [0, 0],\n      bottomRight: [this.trueWidth, this.trueWidth],\n      fillColor: 'rgb(210, 210, 210)',\n    })\n\n    // Gridlines\n    const gridline = new this.paper.SymbolDefinition(\n      new this.paper.Path.Line({\n        from: [0, 0],\n        to: [0, this.trueWidth],\n        // strokeColor: '#324252',\n        strokeColor: 'rgb(180, 180, 180)',\n        strokeWidth: 2,\n      })\n    )\n    for (let i = 0; i <= Handle.STEP; i += 1) {\n      const offset = padding + 0 + (spacing * i)\n      gridline.place(new this.paper.Point(offset, center))\n      const offAxis = gridline.place(new this.paper.Point(center, offset))\n      offAxis.rotate(90)\n    }\n\n    // Value Interpolation Curve\n    this.curve = new this.paper.Path.Line({\n      // strokeColor: '#2176ff',\n      strokeColor: 'rgb(30, 155, 255)',\n      strokeWidth: 2,\n      from: new this.paper.Point(bottomLeft),\n      to: new this.paper.Point(topRight),\n    })\n    this.setVisualCurveHandles()\n\n    // Handle Strings\n    const stringStyle = {\n      // strokeColor: '#2176ff',\n      strokeColor: 'rgb(30, 155, 255)',\n      strokeWidth: 2,\n    }\n    const handleBeforeString = new this.paper.Path.Line({\n      ...stringStyle,\n      from: bottomLeft,\n      to: this.handleBefore(),\n    })\n    const handleAfterString = new this.paper.Path.Line({\n      ...stringStyle,\n      from: this.handleAfter(),\n      to: topRight,\n    })\n\n    // Handle Grips\n    const handleMovable = new this.paper.SymbolDefinition(\n      new this.paper.Path.Circle({\n        point: topLeft,\n        radius: 6,\n        // strokeColor: '#2176ff',\n        strokeColor: 'rgb(30, 155, 255)',\n        strokeWidth: 2,\n        fillColor: new this.paper.Color(1, 0.01),\n      })\n    )\n    const handleStationary = new this.paper.SymbolDefinition(\n      new this.paper.Path.Rectangle({\n        point: [100, 100],\n        size: [10, 10],\n        // fillColor: '#2176ff',\n        fillColor: 'rgb(30, 155, 255)',\n      })\n    )\n    handleStationary.place(bottomLeft)\n    handleStationary.place(topRight)\n    const handleBefore = handleMovable.place(this.handleBefore())\n    const handleAfter = handleMovable.place(this.handleAfter())\n\n    // Handle Events\n    handleBefore.onMouseEnter = () => {\n      this.element.style.cursor = 'pointer'\n    }\n    handleBefore.onMouseLeave = () => {\n      this.element.style.cursor = 'default'\n    }\n    handleBefore.onMouseDrag = (event) => {\n      this.element.style.cursor = 'pointer'\n      const travelled = event.point.subtract(handleBefore.position)\n\n      const xChange = Math.abs(travelled.x) >= (spacing / 2)\n      const yChange = Math.abs(travelled.y) >= (spacing / 2)\n      if (xChange || yChange) {\n        const xSign = Math.sign(travelled.x)\n        const ySign = Math.sign(travelled.y)\n        const newPosition = handleBefore.position.add({\n          x: xSign * spacing * xChange,\n          y: ySign * spacing * yChange,\n        })\n\n        handleBefore.position = newPosition\n        handleBeforeString.lastSegment.point = newPosition\n        this.onMove('OUT', {\n          influence: xSign * Handle.STEP * xChange,\n          distance: -1 * ySign * Handle.STEP * yChange,\n        })\n        this.setVisualCurveHandles()\n      }\n    }\n    handleBefore.onMouseUp = () => {\n      this.element.style.cursor = 'default'\n    }\n\n    handleAfter.onMouseEnter = () => {\n      this.element.style.cursor = 'pointer'\n    }\n    handleAfter.onMouseLeave = () => {\n      this.element.style.cursor = 'default'\n    }\n    handleAfter.onMouseDrag = (event) => {\n      this.element.style.cursor = 'pointer'\n      const travelled = event.point.subtract(handleAfter.position)\n\n      const xChange = Math.abs(travelled.x) >= (spacing / 2)\n      const yChange = Math.abs(travelled.y) >= (spacing / 2)\n      if (xChange || yChange) {\n        const xSign = Math.sign(travelled.x)\n        const ySign = Math.sign(travelled.y)\n        const newPosition = handleAfter.position.add({\n          x: xSign * spacing * xChange,\n          y: ySign * spacing * yChange,\n        })\n\n        handleAfter.position = newPosition\n        handleAfterString.firstSegment.point = newPosition\n        this.onMove('IN', {\n          influence: -1 * xSign * Handle.STEP * xChange,\n          distance: ySign * Handle.STEP * yChange,\n        })\n        this.setVisualCurveHandles()\n      }\n    }\n    handleAfter.onMouseUp = () => {\n      this.element.style.cursor = 'default'\n    }\n  }\n\n\n  handleBefore = () => (\n    this.absoluteHandlePosition(this.keyframeBefore.handleOut.position)\n  )\n\n  handleAfter = () => (\n    this.absoluteHandlePosition(this.keyframeAfter.handleIn.position)\n  )\n\n  absoluteHandlePosition(handlePosition) {\n    return ([\n      handlePosition.x * this.width + this.padding,\n      // Compensates for 4th quadrant cartesian system\n      this.width - (handlePosition.y * this.width) + this.padding,\n    ])\n  }\n\n  setVisualCurveHandles() {\n    if (this.curve) {\n      this.curve.firstSegment.handleOut = new this.paper.Point(\n        this.keyframeBefore.handleOut.influence * this.width / Handle.MAX,\n        -1 * this.keyframeBefore.handleOut.distance * this.width / Handle.MAX\n      )\n      this.curve.lastSegment.handleIn = new this.paper.Point(\n        -1 * this.keyframeAfter.handleIn.influence * this.width / Handle.MAX,\n        this.keyframeAfter.handleIn.distance * this.width / Handle.MAX\n      )\n    }\n  }\n}\n\nexport default HandleEditor\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport Canvas from '../components/Canvas'\n\nimport HandleEditorInstance from '../prototypes/HandleEditor'\n\n@observer\nclass HandleEditor extends React.Component {\n  state = {}\n\n  handleEditor\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.keyframeKey !== undefined && prevProps.keyframeKey !== this.props.keyframeKey) {\n      if (this.handleEditor) this.handleEditor.destroy()\n      this.buildHandleEditorCanvas()\n    }\n  }\n\n  handleEditorHasSize = () => {\n    this.buildHandleEditorCanvas()\n  }\n\n  buildHandleEditorCanvas = () => {\n    const { width, keyframeBefore, keyframeAfter, onMove } = this.props\n\n    if (keyframeBefore && keyframeAfter) {\n      this.handleEditor = new HandleEditorInstance(width, keyframeBefore, keyframeAfter, onMove)\n      this.handleEditor.attatchTo('handle-editor')\n      this.handleEditor.init()\n    }\n  }\n\n  render() {\n    const { width, keyframeKey, keyframeBefore, keyframeAfter } = this.props\n\n    if (keyframeKey === undefined) {\n      return (\n        <h3 style={{ padding: '10px', color: 'darkgray' }}>\n          Select a Keyframe on the Timeline.\n        </h3>\n      )\n    }\n\n    if (keyframeBefore && !keyframeAfter) {\n      return (\n        <h3 style={{ padding: '10px', color: 'darkgray' }}>\n          <i>Selected tail Keyframe has no handle relationships.</i>\n        </h3>\n      )\n    }\n\n    return (\n      <div style={{ padding: '10px' }}>\n        <Canvas\n          id=\"handle-editor\"\n          width={width}\n          height={width}\n          hasSize={this.handleEditorHasSize}\n        />\n      </div>\n    )\n  }\n}\n\nexport default HandleEditor\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport paper from 'paper'\n\nimport Canvas from '../components/Canvas'\n\n@observer\nclass KeyframeEditor extends React.Component {\n  state = {\n    previouslyClickedKeyframe: undefined,\n  }\n\n  paper = new paper.PaperScope()\n  element\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.item !== undefined &&\n      this.props.item !== undefined &&\n      prevProps.item.key !== this.props.item.key\n    ) {\n      this.rebuild()\n    }\n\n    if (prevProps.now !== this.props.now) {\n      this.buildPlayhead()\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp)\n  }\n\n  keyframeEditorHasSize = () => {\n    this.buildKeyframeEditorCanvas()\n  }\n\n  handleKeyframeClick = (event) => {\n    event.stopPropagation()\n    const { currentTarget } = event\n\n    const { onSelect } = this.props\n    const { previouslyClickedKeyframe } = this.state\n\n    if (previouslyClickedKeyframe) {\n      previouslyClickedKeyframe.strokeWidth = 0\n      previouslyClickedKeyframe.shadowColor.alpha = 0\n    }\n    currentTarget.strokeWidth = 1\n    currentTarget.shadowColor.alpha = 0.3\n    onSelect(currentTarget.name)\n    this.setState({ previouslyClickedKeyframe: currentTarget })\n  }\n\n  handleKeyUp = (event) => {\n    const { key } = event\n    const { item, keyframeKey, keyframe, onSelect } = this.props\n    if (key === 'Backspace' || key === 'Delete') {\n      event.preventDefault()\n\n      const keyframeProp = keyframeKey.split('.')[1]\n      onSelect(undefined)\n      item.removeKey(keyframeProp, keyframe.frame)\n      this.rebuild()\n    }\n  }\n\n  buildKeyframeEditorCanvas = () => {\n    const { item } = this.props\n    this.element = document.getElementById('keyframe-editor')\n    this.paper.setup(this.element)\n\n    const { verticalSpacing, timelineStart, timelineEnd, timelineStep } = this.timelineMath()\n    let placementIndex = 0\n\n    const { playheadLine } = this.buildPlayhead()\n    const newKeyframeItems = []\n\n    Object.entries(item.keyframes).forEach(([prop, list]) => {\n      let propName = prop\n      const placing = placementIndex * verticalSpacing + verticalSpacing\n\n      if (prop === 'y') return // Interpret `x` & `y` at the same time\n      if (prop === 'x') {\n        propName = 'position'\n      }\n\n      // Draw Timelines\n      new this.paper.PointText({\n        point: [0, placing],\n        content: propName,\n        fillColor: 'black',\n        fontSize: 14,\n      })\n      const timelineHover = new this.paper.Path.Line({\n        name: 'timelineHover',\n        from: [timelineStart + 5, placing - 5],\n        to: [timelineEnd, placing - 5],\n        strokeColor: 'rgba(180, 180, 180, 1)',\n        strokeWidth: 40,\n      })\n      const timeline = new this.paper.Path.Line({\n        from: [timelineStart + 5, placing - 5],\n        to: [timelineEnd, placing - 5],\n        strokeColor: 'lightgrey',\n        strokeWidth: 4,\n      })\n\n      const newKeyframeRect = new this.paper.Path.Rectangle({\n        name: 'newKeyframeRect',\n        point: [0, placing - 10],\n        size: [10, 10],\n        radius: 3,\n        fillColor: 'rgba(31, 155, 255, 0.5)',\n        rotation: 45,\n        visible: false,\n      })\n      const newKeyframePlus = new this.paper.PointText({\n        point: [0, placing - 8],\n        content: '+',\n        fillColor: 'rgba(31, 155, 255, 0.5)',\n        fontSize: 14,\n        visible: false,\n      })\n\n      newKeyframeItems.push([timelineHover, newKeyframeRect, newKeyframePlus])\n\n      // TODO: Put these all in a group, including the playheadsegment, and apply one event\n      const newKeyframeHoverEffect = (event) => {\n        newKeyframeRect.visible = true\n        newKeyframePlus.visible = true\n        newKeyframeRect.position.x = event.point.x\n        newKeyframePlus.position.x = event.point.x + 10\n      }\n      const newKeyframeHide = () => {\n        newKeyframeRect.visible = false\n        newKeyframePlus.visible = false\n      }\n      const newKeyClick = (event) => {\n        const frame = Math.round((event.point.x - timelineStart) / timelineStep)\n        item.addKey(prop, frame)\n        // console.log(frame)\n        this.rebuild()\n      }\n\n      timelineHover.onMouseMove = newKeyframeHoverEffect\n      timelineHover.onMouseLeave = newKeyframeHide\n      timeline.onMouseMove = newKeyframeHoverEffect\n      timeline.onMouseLeave = newKeyframeHide\n\n      newKeyframeRect.onMouseMove = (event) => {\n        if (timelineHover.hitTest(event.point, { stroke: true, segments: false })) {\n          newKeyframeHoverEffect(event)\n        } else {\n          newKeyframeHide()\n        }\n      }\n\n      timelineHover.onClick = newKeyClick\n      timeline.onClick = newKeyClick\n      newKeyframeRect.onClick = newKeyClick\n\n      // Draw Keyframes\n      list.forEach((keyframe, keyframeIndex) => {\n        const keyframeRect = new this.paper.Path.Rectangle({\n          name: `${item.key}.${prop}.${keyframeIndex}`,\n          point: [timelineStart + keyframe.frame * timelineStep - 5, placing - 10],\n          size: [10, 10],\n          radius: 3,\n          fillColor: 'rgb(30, 155, 255)',\n          rotation: 45,\n          strokeColor: 'white',\n          strokeWidth: 0,\n          shadowColor: 'rgba(0, 0, 0, 0)',\n          shadowBlur: 5,\n        })\n\n        keyframeRect.on('mousedown', this.handleKeyframeClick)\n        keyframeRect.onMouseEnter = () => {\n          this.element.style.cursor = 'pointer'\n          newKeyframeHide()\n        }\n        keyframeRect.onMouseLeave = () => {\n          this.element.style.cursor = 'default'\n        }\n      })\n\n      placementIndex += 1\n    })\n\n    playheadLine.onMouseMove = (event) => {\n      newKeyframeItems.forEach(([\n        timelineHover,\n        newKeyframeRect,\n        newKeyframePlus,\n      ]) => {\n        if (timelineHover.hitTest(event.point)) {\n          /* eslint-disable no-param-reassign */\n          newKeyframeRect.visible = true\n          newKeyframePlus.visible = true\n          newKeyframeRect.position.x = event.point.x\n          newKeyframePlus.position.x = event.point.x + 10\n        } else {\n          newKeyframeRect.visible = false\n          newKeyframePlus.visible = false\n        }\n      })\n    }\n    playheadLine.bringToFront()\n  }\n\n  rebuild() {\n    this.paper.project.clear()\n    this.paper.project.remove()\n    this.buildKeyframeEditorCanvas()\n  }\n\n  buildPlayhead() {\n    const { size, now } = this.props\n    const { timelineStart, timelineStep } = this.timelineMath()\n    const playheadLine = new this.paper.Path.Line({\n      from: [timelineStart + now * timelineStep, 10],\n      to: [timelineStart + now * timelineStep, size.height - 10],\n      strokeColor: 'white',\n      strokeWidth: 1,\n    })\n    const playheadTriangle = new this.paper.Path.RegularPolygon({\n      center: [timelineStart + now * timelineStep, 10],\n      sides: 3,\n      radius: 6,\n      rotation: 180,\n      fillColor: 'white',\n    })\n    return { playheadLine, playheadTriangle }\n  }\n\n  timelineMath() {\n    const { size, frames } = this.props\n    const verticalSpacing = 40\n    const timelineStart = 80\n    const timelineEnd = size.width - verticalSpacing\n    const timelineWidth = timelineEnd - timelineStart\n    const timelineStep = timelineWidth / frames\n    return {\n      verticalSpacing,\n      timelineStart,\n      timelineEnd,\n      timelineWidth,\n      timelineStep,\n    }\n  }\n\n  render() {\n    const { size, item } = this.props\n\n    if (size === undefined || item === undefined) {\n      return (\n        <h3 style={{ padding: '10px', color: 'grey' }}>\n          Select an Item to view its Keyframes.\n        </h3>\n      )\n    }\n\n    return (\n      <div style={{ padding: '10px' }}>\n        <Canvas\n          id=\"keyframe-editor\"\n          width={size.width}\n          height={size.height}\n          hasSize={this.keyframeEditorHasSize}\n        />\n      </div>\n    )\n  }\n}\n\nexport default KeyframeEditor\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Viewer from './Viewer'\nimport HandleEditor from './HandleEditor'\nimport KeyframeEditor from './KeyframeEditor'\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\nimport { titleCase } from '../util/string'\n\n@observer\nclass AnimateMode extends Component {\n  state = {\n    heWidth: undefined,\n    keSize: undefined,\n  }\n\n  componentDidMount() {\n    const { canvas } = this.props.store\n    const container = document.getElementById('view-container')\n    setTimeout(() => {\n      const width = Math.round(container.clientWidth) - 20\n      const height = Math.round((9 / 16) * width)\n      canvas.setSize(width, height)\n    }, 1)\n\n    const container2 = document.getElementById('handle-container')\n    setTimeout(() => {\n      const width = Math.round(container2.clientWidth) - 20\n      const height = Math.round(container2.clientHeight) - 20\n      const smallestLength = Math.min(width, height)\n      this.setState({ heWidth: smallestLength })\n    }, 1)\n\n    const container3 = document.getElementById('keyframe-container')\n    setTimeout(() => {\n      const width = Math.round(container3.clientWidth) - 20\n      const height = Math.round(container3.clientHeight) - 20\n      this.setState({ keSize: { width, height } })\n    }, 1)\n  }\n\n  componentWillUnmount() {\n    const { canvas, project, tools } = this.props.store\n    canvas.selectOff()\n    project.clear()\n    tools.selectKeyframe(undefined)\n  }\n\n  setup = () => {\n    const { canvas } = this.props.store\n    canvas.build()\n    setTimeout(() => {\n      canvas.setTool(undefined)\n      canvas.setTool('SELECT')\n    }, 20)\n  }\n\n  changeHandlePosition = (handleType, { influence, distance }) => {\n    const { tools, canvas } = this.props.store\n    if (!tools.selectedKeyframe) return\n\n    const handleSuffix = titleCase(handleType)\n    const [kItem, kProp, kIndexStr] = tools.selectedKeyframe.split('.')\n    let kIndex = parseInt(kIndexStr)\n    if (handleType === 'IN') {\n      kIndex += 1\n    }\n\n    const targetHandle = canvas.animatables[kItem].keyframes[kProp][kIndex][`handle${handleSuffix}`]\n    let auxilaryHandle\n    if (kProp === 'x') {\n      auxilaryHandle = canvas.animatables[kItem].keyframes.y[kIndex][`handle${handleSuffix}`]\n    }\n\n    targetHandle.influence += influence\n    targetHandle.distance += distance\n\n    if (auxilaryHandle) {\n      auxilaryHandle.influence += influence\n      auxilaryHandle.distance += distance\n    }\n  }\n\n  render() {\n    const { canvas, animation, tools } = this.props.store\n    const { heWidth, keSize } = this.state\n\n    let keyframeBefore\n    let keyframeAfter\n    if (tools.selectedKeyframe) {\n      const [kItem, kProp, kIndexStr] = tools.selectedKeyframe.split('.')\n      const kIndex = parseInt(kIndexStr)\n      const keyframesOfType = canvas.animatables[kItem].keyframes[kProp]\n      keyframeBefore = keyframesOfType[kIndex]\n      if (kIndex + 1 < keyframesOfType.length) {\n        keyframeAfter = keyframesOfType[kIndex + 1]\n      }\n    }\n\n    return (\n      <Grid\n        gridTemplateRows=\"auto 340px\"\n        gridTemplateColumns=\"auto 400px\"\n      >\n        <GridItem id=\"view-container\" padding=\"10px\" gridArea=\"1 / 1 / 1 / 2\">\n          <Viewer canvas={canvas} animation={animation} setup={this.setup} />\n        </GridItem>\n        <GridItem id=\"handle-container\" gridArea=\"1 / 2 / 1 / 3\" backgroundColor=\"rgb(210, 210, 210)\">\n          <HandleEditor\n            width={heWidth}\n            keyframeKey={tools.selectedKeyframe}\n            keyframeBefore={keyframeBefore}\n            keyframeAfter={keyframeAfter}\n            onMove={this.changeHandlePosition}\n          />\n        </GridItem>\n        <GridItem id=\"keyframe-container\" gridArea=\"2 / 1 / 2 / 3\" backgroundColor=\"rgb(180, 180, 180)\">\n          <KeyframeEditor\n            size={keSize}\n            item={canvas.selected}\n            keyframeKey={tools.selectedKeyframe}\n            keyframe={keyframeBefore}\n            onSelect={tools.selectKeyframe}\n            frames={animation.frames}\n            now={animation.now}\n          />\n        </GridItem>\n      </Grid>\n    )\n  }\n}\n\nexport default AnimateMode\n","const titleCase = (str) => {\n  /* Convert `any string` into `Any String`, including replacing underscores\n    with spaces */\n  const splitStr = str.toLowerCase().split(/[\\s_]+/)\n  for (let i = 0; i < splitStr.length; i += 1) {\n    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\n  }\n  return splitStr.join(' ')\n}\n\nexport {\n  titleCase,\n}\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\n\n@observer\nclass PlayController extends Component {\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown, false)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false)\n  }\n\n  handleKeyDown = (event) => {\n    const {\n      play,\n      pause,\n      goToNext,\n      goToPrev,\n      goToFirst,\n      goToLast,\n      playing,\n    } = this.props.animation\n    const { key, shiftKey } = event\n\n    if (key === 'ArrowLeft' && shiftKey) {\n      goToFirst()\n    } else if (key === 'ArrowLeft') {\n      goToPrev()\n    } else if (key === 'ArrowRight' && shiftKey) {\n      goToLast()\n    } else if (key === 'ArrowRight') {\n      goToNext()\n    } else if (key === ' ') {\n      event.stopPropagation()\n      event.preventDefault()\n      if (playing === true) {\n        pause()\n      } else {\n        play()\n      }\n    }\n  }\n\n  render() {\n    const {\n      play,\n      pause,\n      goToNext,\n      goToPrev,\n      goToFirst,\n      goToLast,\n      playing,\n    } = this.props.animation\n\n    return (\n      <Grid gridTemplateColumns=\"30% 1fr 1fr 1fr 1fr 1fr 30%\" height=\"60px\" alignItems=\"center\" justifyItems=\"center\" borderTop=\"1px solid rgb(230, 230, 230)\">\n        <GridItem gridColumnStart=\"2\">\n          <button type=\"button\" style={{ margin: 0 }} onClick={goToFirst}>&#8676;</button>\n        </GridItem>\n        <GridItem gridColumnStart=\"3\">\n          <button type=\"button\" style={{ margin: 0 }} onClick={goToPrev}>&#9667;</button>\n        </GridItem>\n        <GridItem gridColumnStart=\"4\">\n          { playing === false\n            ? <button type=\"button\" style={{ margin: 0 }} onClick={play}>&#9658;</button>\n            : <button type=\"button\" style={{ margin: 0 }} onClick={pause}>&#10073; &#10073;</button>\n          }\n        </GridItem>\n        <GridItem gridColumnStart=\"5\">\n          <button type=\"button\" style={{ margin: 0 }} onClick={goToNext}>\n            <div style={{ transform: 'rotate(180deg)' }}>&#9667;</div>\n          </button>\n        </GridItem>\n        <GridItem gridColumnStart=\"6\">\n          <button type=\"button\" style={{ margin: 0 }} onClick={goToLast}>&#8677;</button>\n        </GridItem>\n      </Grid>\n    )\n  }\n}\n\nexport default PlayController\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Viewer from './Viewer'\nimport PlayController from './PlayController'\nimport Grid from '../components/Grid'\nimport GridItem from '../components/GridItem'\nimport { getWidth } from '../components/withWindowSize'\n\nimport placeholder from '../prototypes/placeholder'\n\n@observer\nclass ViewMode extends Component {\n  componentDidMount() {\n    const { canvas } = this.props.store\n    const width = getWidth() - 20\n    const height = Math.round((9 / 16) * width)\n    canvas.setSize(width, height)\n\n    // placeholder.setRange(this.props.store.animation)\n  }\n\n  componentWillUnmount() {\n    const { project } = this.props.store\n    project.clear()\n  }\n\n  setup = () => {\n    const { canvas } = this.props.store\n    canvas.build()\n  }\n\n  render() {\n    const { canvas, animation } = this.props.store\n    return (\n      <Grid\n        gridTemplateRows=\"auto 60px\"\n        alignItems=\"center\"\n      >\n        <GridItem padding=\"10px\">\n          <Viewer canvas={canvas} animation={animation} setup={this.setup} />\n        </GridItem>\n        <PlayController animation={animation} />\n      </Grid>\n    )\n  }\n}\n\nexport default ViewMode\n","import React from 'react'\n\nconst getWidth = () => (\n  window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth\n)\n\nconst getHeight = () => (\n  window.innerHeight\n    || document.documentElement.clientHeight\n    || document.body.clientHeight\n)\n\nconst withWindowSize = Component => (\n  class extends React.Component {\n    state = {\n      width: getWidth(),\n      height: getHeight(),\n    }\n\n    componentDidMount() {\n      window.addEventListener('resize', this.updateDimensions)\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateDimensions)\n    }\n\n    updateDimensions = () => {\n      const width = getWidth()\n      const height = getHeight()\n      this.setState({ width, height })\n    }\n\n    render() {\n      const { width, height } = this.state\n      return <Component width={width} height={height} {...this.props} />\n    }\n  }\n)\n\nexport default withWindowSize\nexport {\n  getWidth,\n  getHeight,\n}\n","var map = {\n\t\"./bare.min.css\": \"v4a6\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"zGb5\";"],"sourceRoot":""}